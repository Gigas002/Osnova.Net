<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Osnova.Net</name>
    </assembly>
    <members>
        <member name="T:Osnova.Net.AdditionalControls">
            <summary>
            Refers to EtcControls spec
            </summary>
        </member>
        <member name="P:Osnova.Net.AdditionalData.Extension">
            <summary>
            Extension of underlying images
            </summary>
        </member>
        <member name="P:Osnova.Net.Badge.Text">
            <summary>
            Badge text value
            </summary>
        </member>
        <member name="P:Osnova.Net.Badge.Color">
            <summary>
            Badge color
            </summary>
        </member>
        <member name="P:Osnova.Net.Badge.Background">
            <summary>
            Background color
            </summary>
        </member>
        <member name="P:Osnova.Net.Badge.Border">
            <summary>
            Border color
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.AudioBlockData">
            <summary>
            Block with audio file in entry
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.AudioBlockData.Title">
            <summary>
            Audio title
            <para/>
            <remarks>Exists on higher level of AudioBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.AudioBlockData.Hash">
            <summary>
            Audio hash
            <para/>
            <remarks>Exists on higher level of AudioBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.AudioBlockData.Image">
            <summary>
            Image preview if any
            <para/>
            <remarks>Exists on higher level, e.g. AudioBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.AudioBlockData.Audio">
            <summary>
            Audio itself
            <para/>
            <remarks>Exists on higher level, e.g. AudioBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.AudioBlockData.Uuid">
            <summary>
            Audio file's <see cref="T:System.Guid"/> on osnova's servers
            <para/>
            <remarks>You can get the actual URL of the media,
            by calling <see cref="M:Osnova.Net.Core.GetMediaUri(System.Guid)"/> method</remarks>
            <para/>
            <remarks>Exists on lower level, e.g. AudioBlock.Data.Audio.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.AudioBlockData.FileName">
            <summary>
            Audio file name
            <para/>
            <remarks>Exists on lower level, e.g. AudioBlock.Data.Audio.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.AudioBlockData.Length">
            <summary>
            Size of current file in bytes
            <para/>
            <remarks>Refers to "size" property in json</remarks>
            <para/>
            <remarks>Exists on lower level, e.g. AudioBlock.Data.Audio.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.AudioBlockData.AudioInfo">
            <summary>
            Additional info about audio file
            <para/>
            <remarks>Exists on lower level, e.g. AudioBlock.Data.Audio.Data</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.CodeBlockData">
            <summary>
            Block of code in entry
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.CodeBlockData.Text">
            <summary>
            Code as text
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.CodeBlockData.Language">
            <summary>
            Programming language
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.DelimiterBlockData">
            <summary>
            Delimiter in block
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.DelimiterBlockData.Type">
            <summary>
            Type of delimiter
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.HeaderBlockData">
            <summary>
            Headers in block
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.HeaderBlockData.Text">
            <summary>
            Text value
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.HeaderBlockData.Style">
            <summary>
            Header style/level
            <para/>
            <remarks>H1 is used only for entry's title</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.ImageBlockData">
            <summary>
            Image in blocks
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.ImageBlockData.Uuid">
            <summary>
            Image's <see cref="T:System.Guid"/> on osnova's servers
            <para/>
            <remarks>You can get the actual URL of the media,
            by calling <see cref="M:Osnova.Net.Core.GetMediaUri(System.Guid)"/> method</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.ImageBlockData.Width">
            <summary>
            Image width
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.ImageBlockData.Height">
            <summary>
            Image height
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.ImageBlockData.Length">
            <summary>
            Size of current file in bytes
            <para/>
            <remarks>Refers to "size" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.ImageBlockData.Extension">
            <summary>
            File extension
            <para/>
            <remarks>Refers to "type" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.ImageBlockData.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.ImageBlockData.Hash">
            <summary>
            Image hash
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.ImageBlockData.ExternalService">
            <summary>
            External service, to which the image is bound to, if any
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.IncutBlockData">
            <summary>
            Incuts in blocks
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.IncutBlockData.Text">
            <summary>
            Text value
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.IncutBlockData.TextAlignment">
            <summary>
            Alignment of text in incut
            <para/>
            <remarks>Refers to "type" in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.IncutBlockData.TextSize">
            <summary>
            Text's size
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.InstagramBlockData">
            <summary>
            Instagram's data in block
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.InstagramBlockData.Instagram">
            <summary>
            Universal block for external services
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.InstagramBlockData.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.InstagramBlockData.IsHideTitle">
            <summary>
            Do you want to hide the title?
            <para/>
            <remarks>Refers to "hide_title" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.InstagramBlockData.Markdown">
            <summary>
            Markdown text
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.LinkBlockData">
            <summary>
            Link to some external services
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.LinkBlockData.Link">
            <summary>
            Block with link's data
            <para/>
            <remarks>Exists on higher level, e.g. LinkBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.LinkBlockData.Url">
            <summary>
            URL to an external service
            <para/>
            <remarks>Exists on lower level, e.g. LinkBlock.Data.Link.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.LinkBlockData.Title">
            <summary>
            Title of link block
            <para/>
            <remarks>Exists on lower level, e.g. LinkBlock.Data.Link.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.LinkBlockData.Description">
            <summary>
            Description of link block
            <para/>
            <remarks>Exists on lower level, e.g. LinkBlock.Data.Link.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.LinkBlockData.Image">
            <summary>
            Image thumbnail, if any
            <para/>
            <remarks>Exists on lower level, e.g. LinkBlock.Data.Link.Data</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.ListBlockData">
            <summary>
            Lists in blocks
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.ListBlockData.Items">
            <summary>
            String values of the list
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.ListBlockData.Type">
            <summary>
            Type of the list
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.MediaBlockData">
            <summary>
            Container of media data (images, videos) in block
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.MediaBlockData.Items">
            <summary>
            Collection of media items in block
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.MediaBlockData.WithBackground">
            <summary>
            Do you want to add background?
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.MediaBlockData.WithBorder">
            <summary>
            Do you want to add a border?
            </summary>
        </member>
        <member name="M:Osnova.Net.BlockDatas.MediaBlockData.#ctor">
            <summary>
            Creates default <see cref="T:Osnova.Net.BlockDatas.MediaBlockData"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.BlockDatas.MediaBlockData.#ctor(System.Collections.Generic.IEnumerable{Osnova.Net.Blocks.ImageBlock})">
            <summary>
            Creates default <see cref="T:Osnova.Net.BlockDatas.MediaBlockData"/> with images in it
            </summary>
            <param name="imageBlocks">Collection of images</param>
        </member>
        <member name="T:Osnova.Net.BlockDatas.MovieBlockData">
            <summary>
            Video with sound in blocks
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.MovieBlockData.Uuid">
            <summary>
            Video's <see cref="T:System.Guid"/> on osnova's servers
            <para/>
            <remarks>You can get the actual URL of the media,
            by calling <see cref="M:Osnova.Net.Core.GetMediaUri(System.Guid)"/> method</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.MovieBlockData.Extension">
            <summary>
            Extension of this video
            <para/>
            <remarks>Refers to "type" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.MovieBlockData.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.MovieBlockData.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.MovieBlockData.Length">
            <summary>
            Size of current file in bytes
            <para/>
            <remarks>Refers to "size" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.MovieBlockData.Bitrate">
            <summary>
            Bitrate
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.MovieBlockData.Duration">
            <summary>
            Duration in seconds
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.MovieBlockData.Color">
            <summary>
            Color
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.NumberBlockData">
            <summary>
            Represents a block, called "number" in osnova editor
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.NumberBlockData.Number">
            <summary>
            Text value of the block
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.NumberBlockData.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.PersonBlockData">
            <summary>
            Person in the block
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.PersonBlockData.Image">
            <summary>
            Person's image, if any
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.PersonBlockData.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.PersonBlockData.Description">
            <summary>
            Text value of the block
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.QuizBlockData">
            <summary>
            Quiz
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuizBlockData.Uid">
            <summary>
            Unique ID of the quiz, not <see cref="T:System.Guid"/>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuizBlockData.Hash">
            <summary>
            Quiz hash
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuizBlockData.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuizBlockData.Items">
            <summary>
            Quiz questions
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuizBlockData.IsResultPublic">
            <summary>
            Is this quiz anonymous, our you can look at who voted for what?
            <para/>
            <remarks>Refers to "is_public" json property</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuizBlockData.DateCreated">
            <summary>
            Date, when this quiz was created
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.QuoteBlockData">
            <summary>
            Quote
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuoteBlockData.Text">
            <summary>
            Text value
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuoteBlockData.Subline1">
            <summary>
            Subline 1
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuoteBlockData.Subline2">
            <summary>
            Subline 2
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuoteBlockData.Type">
            <summary>
            Quote type
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuoteBlockData.TextSize">
            <summary>
            Size of text
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.QuoteBlockData.Image">
            <summary>
            Quote's image, if any
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.RawHtmlBlockData">
            <summary>
            HTML text with unique features
            <para/>
            <remarks>Editoral block</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.RawHtmlBlockData.Text">
            <summary>
            HTML text
            <para/>
            <remarks>Refers to "raw" property in json</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.SpecialButtonBlockData">
            <summary>
            Special button
            <para/>
            <remarks>Editoral block</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.SpecialButtonBlockData.Text">
            <summary>
            Button text
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.SpecialButtonBlockData.TextColor">
            <summary>
            Text color
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.SpecialButtonBlockData.BackgroundColor">
            <summary>
            Background color
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.SpecialButtonBlockData.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.SpotifyBlockData">
            <summary>
            Spotify's data in blocks
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.SpotifyBlockData.Spotify">
            <summary>
            Universal block for external services
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.TelegramBlockData">
            <summary>
            Telegram's data in blocks
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TelegramBlockData.Telegram">
            <summary>
            Block with link's data
            <para/>
            <remarks>Exists on higher level, e.g. TelegramBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TelegramBlockData.Title">
            <summary>
            Title
            <para/>
            <remarks>Exists on higher level, e.g. TelegramBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TelegramBlockData.Markdown">
            <summary>
            Markdown text
            <para/>
            <remarks>Exists on higher level, e.g. TelegramBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TelegramBlockData.Data">
            <summary>
            Data of telegram block
            <para/>
            <remarks>Refers to "tg_data" property in json</remarks>
            <para/>
            <remarks>Exists on lower level, e.g. TelegramBlock.Data.Telegram.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TelegramBlockData.DataEncoded">
            <summary>
            Encoded string of <see cref="P:Osnova.Net.BlockDatas.TelegramBlockData.Data"/>
            <para/>
            <remarks>Refers to "tg_data_encoded" property in json</remarks>
            <para/>
            <remarks>Exists on lower level, e.g. TelegramBlock.Data.Telegram.Data</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.TextBlockData">
            <summary>
            Text block
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TextBlockData.Text">
            <summary>
            Text value
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TextBlockData.TextTruncated">
            <summary>
            Text value truncated
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.TikTokBlockData">
            <summary>
            TikTok's data in blocks
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TikTokBlockData.TikTok">
            <summary>
            Universal block for external services
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.TweetBlockData">
            <summary>
            Tweet in block
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TweetBlockData.Tweet">
            <summary>
            Block with actual block's data
            <para/>
            <remarks>Exists on higher level, e.g. TweetBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TweetBlockData.Title">
            <summary>
            Title
            <para/>
            <remarks>Exists on higher level, e.g. TweetBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TweetBlockData.HasMedia">
            <summary>
            Has media?
            <para/>
            <remarks>Refers to "media" property in json</remarks>
            <para/>
            <remarks>Exists on higher level, e.g. TweetBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TweetBlockData.HasConversation">
            <summary>
            Has conversation?
            <para/>
            <remarks>Refers to "conversation" property in json</remarks>
            <para/>
            <remarks>Exists on higher level, e.g. TweetBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TweetBlockData.Markdown">
            <summary>
            Tweet's text as markdown
            <para/>
            <remarks>Exists on higher level, e.g. TweetBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TweetBlockData.Data">
            <summary>
            Actual data from twitter
            <para/>
            <remarks>Uses twitter's API ver. 1.1</remarks>
            <para/>
            <remarks>Refers to "tweet_data" property in json</remarks>
            <para/>
            <remarks>Exists on lower level, e.g. TweetBlockData.Tweet.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TweetBlockData.DataEncoded">
            <summary>
            Tweet's text encoded
            <para/>
            <remarks>Refers to "tweet_data_encoded" property in json</remarks>
            <para/>
            <remarks>Exists on lower level, e.g. TweetBlockData.Tweet.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.TweetBlockData.Version">
            <summary>
            Version
            <para/>
            <remarks>Exists on lower level, e.g. TweetBlockData.Tweet.Data</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.UniversalBoxBlockData">
            <summary>
            Universal block for external services's data
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.UniversalBoxBlockData.Service">
            <summary>
            Service type
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.UniversalBoxBlockData.Data">
            <summary>
            Service data
            <para/>
            <remarks>Refers to "box_data" property in json</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.VideoBlockData">
            <summary>
            Class for gifs and video without sound
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.VideoBlockData.Video">
            <summary>
            Block with video's data
            <para/>
            <remarks>Exists on higher level, e.g. VideoBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.VideoBlockData.Title">
            <summary>
            Title
            <para/>
            <remarks>Exists on higher level, e.g. VideoBlock.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.VideoBlockData.Thumbnail">
            <summary>
            Thumbnail image
            <para/>
            <remarks>Exists on lower level, e.g. VideoBlockData.Video.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.VideoBlockData.Width">
            <summary>
            Width
            <para/>
            <remarks>Exists on lower level, e.g. VideoBlockData.Video.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.VideoBlockData.Height">
            <summary>
            Height
            <para/>
            <remarks>Exists on lower level, e.g. VideoBlockData.Video.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.VideoBlockData.Duration">
            <summary>
            Duration
            <para/>
            <remarks>Refers to "time" property in json</remarks>
            <para/>
            <remarks>Exists on lower level, e.g. VideoBlockData.Video.Data</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.VideoBlockData.ExternalService">
            <summary>
            External service, if any
            <para/>
            <remarks>Exists on lower level, e.g. VideoBlockData.Video.Data</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.WarningBlockData">
            <summary>
            Warning block
            <para/>
            <remarks>Editoral block</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.WarningBlockData.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.WarningBlockData.Text">
            <summary>
            Text value
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.WaterfallBlockData">
            <summary>
            Block for continious data, like tweet feed
            <para/>
            <remarks>Editoral block</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.WaterfallBlockData.WaterfallId">
            <summary>
            ID of waterfall
            <para/>
            <remarks>Refers to "wtrfallid" property in json</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.BlockDatas.YandexMusicBlockData">
            <summary>
            Yandex music's data in blocks
            </summary>
        </member>
        <member name="P:Osnova.Net.BlockDatas.YandexMusicBlockData.YandexMusic">
            <summary>
            Universal block for external services
            <para/>
            <remarks>Refers to "yamusic" property in json</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.Blocks.AudioBlock">
            <summary>
            Block with audio data
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.AudioBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.AudioBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.AudioBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.AudioBlock.#ctor(Osnova.Net.BlockDatas.AudioBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.AudioBlock"/> with <see cref="T:Osnova.Net.BlockDatas.AudioBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.Block">
            <summary>
            Refers to EntryBlock spec without Data.
            Implement your own Data in inherited classes
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.Block.Type">
            <summary>
            Type of the block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.Block.HasCover">
            <summary>
            Has cover?
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.Block.Anchor">
            <summary>
            Hyperlink to some object in block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.Block.IsHidden">
            <summary>
            Is this a hidden spoiler block?
            <para/>
            <remarks>Refers to "hidden" property in json</remarks>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.Block.#ctor(Osnova.Net.Enums.BlockType)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.Block"/>
            </summary>
            <param name="type">Block type</param>
        </member>
        <member name="M:Osnova.Net.Blocks.Block.GetBlockType">
            <inheritdoc cref="M:Osnova.Net.Blocks.Block.GetBlockType(Osnova.Net.Enums.BlockType)"/>
        </member>
        <member name="M:Osnova.Net.Blocks.Block.GetBlockType(Osnova.Net.Enums.BlockType)">
            <summary>
            Get block's real <see cref="T:System.Type"/>
            </summary>
            <param name="type">Type to switch on</param>
            <returns><see cref="T:System.Type"/></returns>
        </member>
        <member name="T:Osnova.Net.Blocks.CodeBlock">
            <summary>
            Block with code-text
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.CodeBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.CodeBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.CodeBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.CodeBlock.#ctor(Osnova.Net.BlockDatas.CodeBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.CodeBlock"/> with <see cref="T:Osnova.Net.BlockDatas.CodeBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.DelimiterBlock">
            <summary>
            Delimiter block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.DelimiterBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.DelimiterBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.DelimiterBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.DelimiterBlock.#ctor(Osnova.Net.BlockDatas.DelimiterBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.DelimiterBlock"/> with <see cref="T:Osnova.Net.BlockDatas.DelimiterBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.EntryBlock">
            <summary>
            Block with entry in it
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.EntryBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.EntryBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.EntryBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.EntryBlock.#ctor(Osnova.Net.Entries.Entry)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.EntryBlock"/> with <see cref="T:Osnova.Net.Entries.Entry"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.HeaderBlock">
            <summary>
            Header block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.HeaderBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.HeaderBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.HeaderBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.HeaderBlock.#ctor(Osnova.Net.BlockDatas.HeaderBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.HeaderBlock"/> with <see cref="T:Osnova.Net.BlockDatas.HeaderBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.ImageBlock">
            <summary>
            Image block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.ImageBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.ImageBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.ImageBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.ImageBlock.#ctor(Osnova.Net.BlockDatas.ImageBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.ImageBlock"/> with <see cref="T:Osnova.Net.BlockDatas.ImageBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.IncutBlock">
            <summary>
            Incut block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.IncutBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.IncutBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.IncutBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.IncutBlock.#ctor(Osnova.Net.BlockDatas.IncutBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.IncutBlock"/> with <see cref="T:Osnova.Net.BlockDatas.IncutBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.InstagramBlock">
            <summary>
            Instagram block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.InstagramBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.InstagramBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.InstagramBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.InstagramBlock.#ctor(Osnova.Net.BlockDatas.InstagramBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.InstagramBlock"/> with <see cref="T:Osnova.Net.BlockDatas.InstagramBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.LinkBlock">
            <summary>
            Link block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.LinkBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.LinkBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.LinkBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.LinkBlock.#ctor(Osnova.Net.BlockDatas.LinkBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.LinkBlock"/> with <see cref="T:Osnova.Net.BlockDatas.LinkBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.ListBlock">
            <summary>
            List block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.ListBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.ListBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.ListBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.ListBlock.#ctor(Osnova.Net.BlockDatas.ListBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.ListBlock"/> with <see cref="T:Osnova.Net.BlockDatas.ListBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.MediaBlock">
            <summary>
            Media block with images/gifs/etc
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.MediaBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.MediaBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.MediaBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.MediaBlock.#ctor(Osnova.Net.BlockDatas.MediaBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.MediaBlock"/> with <see cref="T:Osnova.Net.BlockDatas.MediaBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="M:Osnova.Net.Blocks.MediaBlock.GetImageDatas">
            <summary>
            Get all <see cref="T:Osnova.Net.BlockDatas.ImageBlockData"/>s inside of this <see cref="T:Osnova.Net.Blocks.MediaBlock"/>
            </summary>
            <returns>Collection of <see cref="T:Osnova.Net.BlockDatas.ImageBlockData"/></returns>
        </member>
        <member name="T:Osnova.Net.Blocks.MovieBlock">
            <summary>
            Video with sound block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.MovieBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.MovieBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.MovieBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.MovieBlock.#ctor(Osnova.Net.BlockDatas.MovieBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.MovieBlock"/> with <see cref="T:Osnova.Net.BlockDatas.MovieBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.NumberBlock">
            <summary>
            Number block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.NumberBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.NumberBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.NumberBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.NumberBlock.#ctor(Osnova.Net.BlockDatas.NumberBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.NumberBlock"/> with <see cref="T:Osnova.Net.BlockDatas.NumberBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.PersonBlock">
            <summary>
            Person block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.PersonBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.PersonBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.PersonBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.PersonBlock.#ctor(Osnova.Net.BlockDatas.PersonBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.PersonBlock"/> with <see cref="T:Osnova.Net.BlockDatas.PersonBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.QuizBlock">
            <summary>
            Quiz block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.QuizBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.QuizBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.QuizBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.QuizBlock.#ctor(Osnova.Net.BlockDatas.QuizBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.QuizBlock"/> with <see cref="T:Osnova.Net.BlockDatas.QuizBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.QuoteBlock">
            <summary>
            Quote block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.QuoteBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.QuoteBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.QuoteBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.QuoteBlock.#ctor(Osnova.Net.BlockDatas.QuoteBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.QuoteBlock"/> with <see cref="T:Osnova.Net.BlockDatas.QuoteBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.RawHtmlBlock">
            <summary>
            Raw HTML block
            <para/>
            <remarks>Editoral block</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.RawHtmlBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.RawHtmlBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.RawHtmlBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.RawHtmlBlock.#ctor(Osnova.Net.BlockDatas.RawHtmlBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.RawHtmlBlock"/> with <see cref="T:Osnova.Net.BlockDatas.RawHtmlBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.SpecialButtonBlock">
            <summary>
            Special button block
            <para/>
            <remarks>Editoral block</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.SpecialButtonBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.SpecialButtonBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.SpecialButtonBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.SpecialButtonBlock.#ctor(Osnova.Net.BlockDatas.SpecialButtonBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.SpecialButtonBlock"/> with <see cref="T:Osnova.Net.BlockDatas.SpecialButtonBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.SpotifyBlock">
            <summary>
            Spotify block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.SpotifyBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.SpotifyBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.SpotifyBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.SpotifyBlock.#ctor(Osnova.Net.BlockDatas.SpotifyBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.SpotifyBlock"/> with <see cref="T:Osnova.Net.BlockDatas.SpotifyBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.TelegramBlock">
            <summary>
            Telegram block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.TelegramBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.TelegramBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.TelegramBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.TelegramBlock.#ctor(Osnova.Net.BlockDatas.TelegramBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.TelegramBlock"/> with <see cref="T:Osnova.Net.BlockDatas.TelegramBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.TextBlock">
            <summary>
            Text block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.TextBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.TextBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.TextBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.TextBlock.#ctor(Osnova.Net.BlockDatas.TextBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.TextBlock"/> with <see cref="T:Osnova.Net.BlockDatas.TextBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.TikTokBlock">
            <summary>
            TikTok block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.TikTokBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.TikTokBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.TikTokBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.TikTokBlock.#ctor(Osnova.Net.BlockDatas.TikTokBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.TikTokBlock"/> with <see cref="T:Osnova.Net.BlockDatas.TikTokBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.TweetBlock">
            <summary>
            Tweet block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.TweetBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.TweetBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.TweetBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.TweetBlock.#ctor(Osnova.Net.BlockDatas.TweetBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.TweetBlock"/> with <see cref="T:Osnova.Net.BlockDatas.TweetBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.UniversalBoxBlock">
            <summary>
            Universal block for external services
            <para/>
            <remarks>Used in: <see cref="T:Osnova.Net.BlockDatas.InstagramBlockData"/>, <see cref="T:Osnova.Net.BlockDatas.SpotifyBlockData"/>,
            <see cref="T:Osnova.Net.BlockDatas.TikTokBlockData"/>, <see cref="T:Osnova.Net.BlockDatas.YandexMusicBlockData"/></remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.UniversalBoxBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.UniversalBoxBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.UniversalBoxBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.UniversalBoxBlock.#ctor(Osnova.Net.BlockDatas.UniversalBoxBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.UniversalBoxBlock"/> with <see cref="T:Osnova.Net.BlockDatas.UniversalBoxBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.UserBlock">
            <summary>
            User inside of block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.UserBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.UserBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.UserBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.UserBlock.#ctor(Osnova.Net.Users.User)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.UserBlock"/> with <see cref="T:Osnova.Net.Users.User"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.VideoBlock">
            <summary>
            Video without sound or gif block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.VideoBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.VideoBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.VideoBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.VideoBlock.#ctor(Osnova.Net.BlockDatas.VideoBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.VideoBlock"/> with <see cref="T:Osnova.Net.BlockDatas.VideoBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.WarningBlock">
            <summary>
            Warning block
            <para/>
            <remarks>Editoral block</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.WarningBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.WarningBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.WarningBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.WarningBlock.#ctor(Osnova.Net.BlockDatas.WarningBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.WarningBlock"/> with <see cref="T:Osnova.Net.BlockDatas.WarningBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.WaterfallBlock">
            <summary>
            Waterfall block for continious data
            <para/>
            <remarks>Editoral block</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.WaterfallBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.WaterfallBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.WaterfallBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.WaterfallBlock.#ctor(Osnova.Net.BlockDatas.WaterfallBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.WaterfallBlock"/> with <see cref="T:Osnova.Net.BlockDatas.WaterfallBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Blocks.YandexMusicBlock">
            <summary>
            Yandex music block
            </summary>
        </member>
        <member name="P:Osnova.Net.Blocks.YandexMusicBlock.Data">
            <summary>
            Actual data of the block
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.YandexMusicBlock.#ctor">
            <summary>
            Create default <see cref="T:Osnova.Net.Blocks.YandexMusicBlock"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.Blocks.YandexMusicBlock.#ctor(Osnova.Net.BlockDatas.YandexMusicBlockData)">
            <summary>
            Create <see cref="T:Osnova.Net.Blocks.YandexMusicBlock"/> with <see cref="T:Osnova.Net.BlockDatas.YandexMusicBlockData"/>
            </summary>
            <param name="data">Data to add</param>
        </member>
        <member name="T:Osnova.Net.Comments.Comment">
            <inheritdoc cref="T:Osnova.Net.Comments.IComment"/>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.Id">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.DateCreated">
            <inheritdoc />
            <para/>
            <remarks>Refers to "date" [rp[erty in json</remarks>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.DateCreatedRfc">
            <inheritdoc />
            <para/>
            <remarks>Refers to "dateRFC" [rp[erty in json</remarks>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.Author">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.Text">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.MarkdownText">
            <inheritdoc />
            <para/>
            <remarks>Refers to "text_wo_md" [rp[erty in json</remarks>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.Media">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.Likes">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.Entry">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.ReplyToId">
            <inheritdoc />
            <para/>
            <remarks>Refers to "replyTo" [rp[erty in json</remarks>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.IsFavorited">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.IsPinned">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.IsEdited">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.Level">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.SourceOs">
            <inheritdoc />
            <para/>
            <remarks>Refers to "source_id" [rp[erty in json</remarks>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.LoadMore">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.Attachments">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Comments.Comment.AdditionalControls">
            <inheritdoc />
            <para/>
            <remarks>Refers to "etcControls" [rp[erty in json</remarks>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.DateFavorited">
            <summary>
            Date, when this comment was favorited
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.IsIgnored">
            <summary>
            Is this comment ignored?
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.IsRemoved">
            <summary>
            Is this comment removed?
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.Html">
            <summary>
            HTML version of this comment
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.Highlight">
            <summary>
            Highlight
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.Comment.Donate">
            <summary>
            Donate vslue, if this is a donate comment
            </summary>
        </member>
        <member name="M:Osnova.Net.Comments.Comment.GetDefaultCommentUrl(Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets default comment URL
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/comment</returns>
        </member>
        <member name="M:Osnova.Net.Comments.Comment.GetEntryCommentsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Enums.CommentSorting,System.Double)">
            <inheritdoc cref="M:Osnova.Net.Entries.Entry.GetCommentsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Enums.CommentSorting,System.Double)"/>
        </member>
        <member name="M:Osnova.Net.Comments.Comment.GetEntryCommentsThreadsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Enums.CommentSorting,System.Double)">
            <inheritdoc cref="M:Osnova.Net.Entries.Entry.GetCommentsThreadsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Enums.CommentSorting,System.Double)"/>
        </member>
        <member name="M:Osnova.Net.Comments.Comment.GetEntryCommentThreadAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Double)">
            <inheritdoc cref="M:Osnova.Net.Entries.Entry.GetCommentThreadAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Double)"/>
        </member>
        <member name="M:Osnova.Net.Comments.Comment.GetCommentLikersUri(Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets an URL to get likers of specified comment
            <para/>
            <remarks>Original name: getCommentLikersUri</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="commentId">Comment id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/comment/likers/0</returns>
        </member>
        <member name="M:Osnova.Net.Comments.Comment.GetCommentLikersResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets likers for specified comment
            <para/>
            <remarks>Original name: getCommentLikersUri</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="commentId">Comment id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested likers</returns>
        </member>
        <member name="M:Osnova.Net.Comments.Comment.GetCommentLikersAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets likers for specified comment
            <para/>
            <remarks>Original name: getCommentLikersUri</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="commentId">Comment id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested likers</returns>
        </member>
        <member name="M:Osnova.Net.Comments.Comment.GetPopularUri(Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets an URL to get most popular entries and comments
            <para/>
            <remarks>Original name: getEntryWidgets</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/entry/0/widgets</returns>
        </member>
        <member name="M:Osnova.Net.Comments.Comment.GetPopularResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets popular entries and comments
            <para/>
            <remarks>Original name: getEntryWidgets</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested popular entries and comments</returns>
        </member>
        <member name="M:Osnova.Net.Comments.Comment.GetPopularAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets popular entries and comments
            <para/>
            <remarks>Original name: getEntryWidgets</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested popular entries and comments</returns>
        </member>
        <member name="T:Osnova.Net.Comments.CommentEditorSettings">
            <summary>
            Settings for comment editor
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.CommentEditorSettings.IsEnabled">
            <summary>
            Is comment editor enabled?
            <para/>
            <remarks>Refers to "enabled" property in json</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.Comments.CommentMedia">
            <summary>
            Comment's media
            <para/>
            <remarks>Refers to "Medium" specification</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.CommentMedia.Type">
            <summary>
            Media type
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.CommentMedia.ImageUrl">
            <summary>
            Image URL, if type is image
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.CommentMedia.IframeUrl">
            <summary>
            Iframe URL, if type is video
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.CommentMedia.Service">
            <summary>
            External service name
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.CommentMedia.AdditionalData">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.CommentMedia.Size">
            <summary>
            Media sizes
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.CommentsLoadMore.Ids">
            <summary>
            Collection of comments IDs to load
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.CommentsLoadMore.Count">
            <summary>
            Count of comments to load
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.CommentsLoadMore.AvatarsUrls">
            <summary>
            Collection of user's avatars
            </summary>
        </member>
        <member name="T:Osnova.Net.Comments.CommentThreads">
            <summary>
            Represents comments threads
            <para/>
            <remarks>Refers to CommentsLevels in spec</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.CommentThreads.Items">
            <summary>
            Collections of comments
            </summary>
        </member>
        <member name="T:Osnova.Net.Comments.IComment">
            <summary>
            Refers to "Comment" specification
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.Id">
            <summary>
            Comment's ID
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.DateCreated">
            <summary>
            Date, when this comment was created
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.DateCreatedRfc">
            <summary>
            Date, when this comment was created
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.Author">
            <summary>
            Comment's author
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.Text">
            <summary>
            Full comment's text with HTML
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.MarkdownText">
            <summary>
            Full comment's text with markdown
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.Media">
            <summary>
            Media files, attached to comment.
            Not a copy of <see cref="P:Osnova.Net.Comments.IComment.Attachments"/>
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.Likes">
            <summary>
            Likes of this comment
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.Entry">
            <summary>
            To which entry this comment is bound?
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.ReplyToId">
            <summary>
            ID of user, if comment was a reply
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.IsFavorited">
            <summary>
            Is current logged user favorited this comment?
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.IsPinned">
            <summary>
            Is this comment pinned?
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.IsEdited">
            <summary>
            Was this comment edited?
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.Level">
            <summary>
            Level of depth in thread
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.SourceOs">
            <summary>
            From which OS this comment was created?
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.LoadMore">
            <summary>
            Exists if there are a lot a hidden comments in reply to this
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.Attachments">
            <summary>
            Collection of additional blocks (images/videos/etc) for this comment
            <para/>
            <remarks>In spec it's Attach, but in reality -- <see cref="T:Osnova.Net.Blocks.Block"/></remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Comments.IComment.AdditionalControls">
            <summary>
            Additional controls
            </summary>
        </member>
        <member name="T:Osnova.Net.Companies.Company">
            <inheritdoc cref="T:Osnova.Net.Companies.ICompany"/>
        </member>
        <member name="P:Osnova.Net.Companies.Company.Id">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Companies.Company.Name">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Companies.Company.Logo">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Companies.Company.Url">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Companies.Company.IsVerified">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Companies.Company.Type">
            <summary>
            Company type (IT, etc)
            </summary>
        </member>
        <member name="T:Osnova.Net.Companies.ICompany">
            <summary>
            Refers to Company spec
            </summary>
        </member>
        <member name="P:Osnova.Net.Companies.ICompany.Id">
            <summary>
            Company's ID
            </summary>
        </member>
        <member name="P:Osnova.Net.Companies.ICompany.Name">
            <summary>
            Company's name
            </summary>
        </member>
        <member name="P:Osnova.Net.Companies.ICompany.Logo">
            <summary>
            Company's logo's URL
            </summary>
        </member>
        <member name="P:Osnova.Net.Companies.ICompany.Url">
            <summary>
            Company's URL
            </summary>
        </member>
        <member name="P:Osnova.Net.Companies.ICompany.IsVerified">
            <summary>
            Is verified company
            </summary>
        </member>
        <member name="T:Osnova.Net.Constants.DtfSubsiteIds">
            <summary>
            Ids of most DTF's subsites
            <para/>
            Info sources:
            <para/>
            - https://dtf.ru/sitemap/standard
            <para/>
            - https://api.dtf.ru/v2.0/onboarding
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Games">
            <summary>
            https://dtf.ru/games
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Gamedev">
            <summary>
            https://dtf.ru/gamedev
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Flood">
            <summary>
            https://dtf.ru/flood
            <para/>
            Also known as: Offtop
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Anime">
            <summary>
            https://dtf.ru/anime
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Cinema">
            <summary>
            https://dtf.ru/cinema
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Read">
            <summary>
            https://dtf.ru/read
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Indie">
            <summary>
            https://dtf.ru/indie
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Ask">
            <summary>
            https://dtf.ru/ask
            <para/>
            Also known as: Questions
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Sale">
            <summary>
            https://dtf.ru/sale
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Avi">
            <summary>
            https://dtf.ru/avi
            <para/>
            Also known as: Video
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Kek">
            <summary>
            https://dtf.ru/kek
            <para/>
            Also known as: Memes
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Retro">
            <summary>
            https://dtf.ru/retro
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Bugs">
            <summary>
            https://dtf.ru/bugs
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Esport">
            <summary>
            https://dtf.ru/esport
            <para/>
            Also known as: Cybersport
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Music">
            <summary>
            https://dtf.ru/music
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Podcasts">
            <summary>
            https://dtf.ru/podcasts
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Party">
            <summary>
            https://dtf.ru/party
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.ShaurmaShaverma">
            <summary>
            https://dtf.ru/shaurmashaverma
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Craft">
            <summary>
            https://dtf.ru/craft
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.GameIndustry">
            <summary>
            https://dtf.ru/gameindustry
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Nenanimalsia">
            <summary>
            https://dtf.ru/nenanimalsia
            <para/>
            Also known as: Links
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Hard">
            <summary>
            https://dtf.ru/hard
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.NotACowLevel">
            <summary>
            https://dtf.ru/s/notacowlevel
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.HowTo">
            <summary>
            https://dtf.ru/howto
            <para/>
            Also known as: Guides
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Science">
            <summary>
            https://dtf.ru/science
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Mobile">
            <summary>
            https://dtf.ru/mobile
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.R6">
            <summary>
            https://dtf.ru/r6
            <para/>
            Also known as: Rainbow Six Siege
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.BoardGames">
            <summary>
            https://dtf.ru/boardgames
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Barter">
            <summary>
            https://dtf.ru/barter
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Qat">
            <summary>
            https://dtf.ru/qat
            <para/>
            Also known as: Blogosphere
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Life">
            <summary>
            https://dtf.ru/life
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.ApiTest">
            <summary>
            https://dtf.ru/apitest
            <para/>
            Also known as: Polygon
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Konami">
            <summary>
            https://dtf.ru/konami
            <para/>
            Also known as: Polygon
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Mordhau">
            <summary>
            https://dtf.ru/mordhau
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.ForHonor">
            <summary>
            https://dtf.ru/forhonor
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Destiny">
            <summary>
            https://dtf.ru/destiny
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Bf">
            <summary>
            https://dtf.ru/bf
            <para/>
            Also known as: Battlefield
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.WildSaloon">
            <summary>
            https://dtf.ru/s/wildsaloon
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Ideas">
            <summary>
            https://dtf.ru/ideas
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Screenshots">
            <summary>
            https://dtf.ru/screenshots
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Photo">
            <summary>
            https://dtf.ru/photo
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.UnrealEngine">
            <summary>
            https://dtf.ru/unrealengine
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Cats">
            <summary>
            https://dtf.ru/s/cats
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.DramaQueen">
            <summary>
            https://dtf.ru/dramaqueen
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Collection">
            <summary>
            https://dtf.ru/s/collection
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Minecraft">
            <summary>
            https://dtf.ru/s/minecraft
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Narrative">
            <summary>
            https://dtf.ru/narrative
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Release">
            <summary>
            https://dtf.ru/s/release
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.StarWars">
            <summary>
            https://dtf.ru/s/starwars
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Unity">
            <summary>
            https://dtf.ru/s/unity
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Wow">
            <summary>
            https://dtf.ru/s/wow
            <para/>
            Also known as: World of Warcraft
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Cosplay">
            <summary>
            https://dtf.ru/s/cosplay
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Art">
            <summary>
            https://dtf.ru/s/art
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Coub">
            <summary>
            https://dtf.ru/coub
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.NewBy">
            <summary>
            https://dtf.ru/new_by_4_at_157890609
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.NoContext">
            <summary>
            https://dtf.ru/nocontext
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.EliteDangerous">
            <summary>
            https://dtf.ru/elitedangerous
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.EgsNotOfficial">
            <summary>
            https://dtf.ru/s/egs_not_official
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Upscale">
            <summary>
            https://dtf.ru/upscale
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.PlayStation">
            <summary>
            https://dtf.ru/s/playstation
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Gloss">
            <summary>
            https://dtf.ru/gloss
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.AboutPorn">
            <summary>
            https://dtf.ru/aboutporn
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Rap">
            <summary>
            https://dtf.ru/s/rap
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Peseli">
            <summary>
            https://dtf.ru/s/peseli
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Animation">
            <summary>
            https://dtf.ru/s/animation
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Overwatch">
            <summary>
            https://dtf.ru/s/overwatch
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Festival">
            <summary>
            https://dtf.ru/s/festival
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Wot">
            <summary>
            https://dtf.ru/s/wot
            <para/>
            Also known as: World of Tanks
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Division">
            <summary>
            https://dtf.ru/s/division
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.AnimalCrossing">
            <summary>
            https://dtf.ru/s/animalcrossing
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.VrAr">
            <summary>
            https://dtf.ru/s/vr_ar
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Gachimuchi">
            <summary>
            https://dtf.ru/s/gachimuchi
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Hack">
            <summary>
            https://dtf.ru/hack
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.FindTeam">
            <summary>
            https://dtf.ru/findteam
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Seattle">
            <summary>
            https://dtf.ru/s/seattle
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.GamedevNews">
            <summary>
            https://dtf.ru/s/gamedevnews
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.GachaHell">
            <summary>
            https://dtf.ru/s/gachahell
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Live">
            <summary>
            https://dtf.ru/live
            <para/>
            Also known as: Streams
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Dota">
            <summary>
            https://dtf.ru/s/dota
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Weaboo">
            <summary>
            https://dtf.ru/s/weaboo
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Racing">
            <summary>
            https://dtf.ru/s/racing
            <para/>
            Also known as: Autosport
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Design">
            <summary>
            https://dtf.ru/s/design
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Taverna">
            <summary>
            https://dtf.ru/s/taverna
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.MegaTen">
            <summary>
            https://dtf.ru/s/megaten
            <para/>
            Also known as: Megami Tensei
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Dbd">
            <summary>
            https://dtf.ru/s/dbd
            <para/>
            Also known as: Dead By Daylight
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.ParadoxGames">
            <summary>
            https://dtf.ru/s/paradoxgames
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Stonks">
            <summary>
            https://dtf.ru/s/stonks
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.SuperJam">
            <summary>
            https://dtf.ru/s/superjam
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Auf">
            <summary>
            https://dtf.ru/s/auf
            <para/>
            Also known as: Animals
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Mtg">
            <summary>
            https://dtf.ru/s/mtg
            <para/>
            Also known as: Magic The Gathering
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.XboxClub">
            <summary>
            https://dtf.ru/s/xbox_club
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Arcade">
            <summary>
            https://dtf.ru/s/arcade
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Crypto">
            <summary>
            https://dtf.ru/s/crypto
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Halo">
            <summary>
            https://dtf.ru/s/halo
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Chess">
            <summary>
            https://dtf.ru/s/chess
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Japan">
            <summary>
            https://dtf.ru/s/japan
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Titanfall">
            <summary>
            https://dtf.ru/s/titanfall
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.TriDe">
            <summary>
            https://dtf.ru/s/tri_de
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Guns">
            <summary>
            https://dtf.ru/s/guns
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Warhammer">
            <summary>
            https://dtf.ru/s/warhammer
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Tardis">
            <summary>
            https://dtf.ru/s/tardis
            <para/>
            Also known as: Doctor Who
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.SteamNotOfficial">
            <summary>
            https://dtf.ru/s/steamnotofficial
            <para/>
            Also known as: Steam
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Cp2077">
            <summary>
            https://dtf.ru/cp2077
            <para/>
            Also known as: Cyberpunk 2077
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Lol">
            <summary>
            https://dtf.ru/s/lol
            <para/>
            Also known as: League Of Legends
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.GamedevLaw">
            <summary>
            https://dtf.ru/s/gamedevlaw
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.StarCitizen">
            <summary>
            https://dtf.ru/s/starcitizen
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Travel">
            <summary>
            https://dtf.ru/s/travel
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.WorldBuilding">
            <summary>
            https://dtf.ru/s/worldbuilding
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Superhero">
            <summary>
            https://dtf.ru/s/superhero
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Warhammer40K">
            <summary>
            https://dtf.ru/s/warhammer40k
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.StarTrek">
            <summary>
            https://dtf.ru/s/startrek
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.ResidentEvil">
            <summary>
            https://dtf.ru/s/residentevil
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.NintendoFan">
            <summary>
            https://dtf.ru/s/nintendofan
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.NintendoClub">
            <summary>
            https://dtf.ru/s/nintendoclub
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.IndieJam">
            <summary>
            https://dtf.ru/s/indie-jam
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Hololive">
            <summary>
            https://dtf.ru/s/hololive
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.Boletaria">
            <summary>
            https://dtf.ru/s/boletaria
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.CallOfDuty">
            <summary>
            https://dtf.ru/s/callofduty
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.DtfSubsiteIds.SoulsLike">
            <summary>
            https://dtf.ru/s/soulslike
            </summary>
        </member>
        <member name="T:Osnova.Net.Constants.TjournalSubsiteIds">
            <summary>
            Ids of most TJ's subsites
            <para/>
            Info sources:
            <para/>
            https://tjournal.ru/sitemap/standard
            <para/>
            https://api.tjournal.ru/v2.0/onboarding
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Internet">
            <summary>
            https://tjournal.ru/internet
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Tech">
            <summary>
            https://tjournal.ru/tech
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Science">
            <summary>
            https://tjournal.ru/science
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Music">
            <summary>
            https://tjournal.ru/music
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Tv">
            <summary>
            https://tjournal.ru/tv
            <para/>
            Also known as: Cinema
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Stories">
            <summary>
            https://tjournal.ru/stories
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Questions">
            <summary>
            https://tjournal.ru/ask
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Animals">
            <summary>
            https://tjournal.ru/animals
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Flood">
            <summary>
            https://tjournal.ru/flood
            <para/>
            Also known as: Offtop
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Photo">
            <summary>
            https://tjournal.ru/photo
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Art">
            <summary>
            https://tjournal.ru/art
            <para/>
            Also known as: Design
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Bugs">
            <summary>
            https://tjournal.ru/bugs
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Wtf">
            <summary>
            https://tjournal.ru/wtf
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Git">
            <summary>
            https://tjournal.ru/git
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Kz">
            <summary>
            https://tjournal.ru/kz
            <para/>
            Also known as: Kazakhstan
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Podcasts">
            <summary>
            https://tjournal.ru/podcasts
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Handmade">
            <summary>
            https://tjournal.ru/handmade
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Dev">
            <summary>
            https://tjournal.ru/dev
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Tweets">
            <summary>
            https://tjournal.ru/tweets
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.BipBopImaBot">
            <summary>
            https://tjournal.ru/bipbipimabot
            <para/>
            Also known as: Polygon
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.GifV">
            <summary>
            https://tjournal.ru/gifv
            <para/>
            Also known as: Video
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Coub">
            <summary>
            https://tjournal.ru/coub
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Voronezh">
            <summary>
            https://tjournal.ru/voronezh
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Spb">
            <summary>
            https://tjournal.ru/spb
            <para/>
            Also known as: Saint Petersburg
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Anime">
            <summary>
            https://tjournal.ru/anime
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Links">
            <summary>
            https://tjournal.ru/links
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Galyaska">
            <summary>
            https://tjournal.ru/galyaska
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Moscow">
            <summary>
            https://tjournal.ru/moscow
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.News">
            <summary>
            https://tjournal.ru/news
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Analysis">
            <summary>
            https://tjournal.ru/analysis
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Telegram">
            <summary>
            https://tjournal.ru/telegram
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Sex">
            <summary>
            https://tjournal.ru/sex
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Reddit">
            <summary>
            https://tjournal.ru/reddit
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Ekb">
            <summary>
            https://tjournal.ru/ekb
            <para/>
            Also known as: Ekaterinburg
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.By">
            <summary>
            https://tjournal.ru/by
            <para/>
            Also known as: Belarus
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Ideas">
            <summary>
            https://tjournal.ru/ideas
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Lego">
            <summary>
            https://tjournal.ru/lego
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Ua">
            <summary>
            https://tjournal.ru/ua
            <para/>
            Also known as: Ukraine
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Alko">
            <summary>
            https://tjournal.ru/alko
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Sportj">
            <summary>
            https://tjournal.ru/sportj
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Kitchen">
            <summary>
            https://tjournal.ru/kitchen
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Rap">
            <summary>
            https://tjournal.ru/rap
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.TestTime">
            <summary>
            https://tjournal.ru/testtime
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Retro">
            <summary>
            https://tjournal.ru/retro
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Ddoi">
            <summary>
            https://tjournal.ru/ddoi
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Games">
            <summary>
            https://tjournal.ru/games
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Kenigsberg">
            <summary>
            https://tjournal.ru/kenigsberg
            <para/>
            Also known as: Kaliningrad
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Novosibirsk">
            <summary>
            https://tjournal.ru/s/novosibirsk
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Furry">
            <summary>
            https://tjournal.ru/furry
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Phc">
            <summary>
            https://tjournal.ru/s/phc
            <para/>
            Also known as: Post Hardcore
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.AllStars">
            <summary>
            https://tjournal.ru/s/allstars
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.FanFiction">
            <summary>
            https://tjournal.ru/s/fanfiction
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Health">
            <summary>
            https://tjournal.ru/s/health
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Painting">
            <summary>
            https://tjournal.ru/s/painting
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Dating">
            <summary>
            https://tjournal.ru/s/dating
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Asmr">
            <summary>
            https://tjournal.ru/s/asmr
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Tver">
            <summary>
            https://tjournal.ru/s/tver
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Emigration">
            <summary>
            https://tjournal.ru/s/emigration
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Books">
            <summary>
            https://tjournal.ru/s/books
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Memes">
            <summary>
            https://tjournal.ru/s/memes
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.CyberRats">
            <summary>
            https://tjournal.ru/cyberrats
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Dispute">
            <summary>
            https://tjournal.ru/s/dispute
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Caticide">
            <summary>
            https://tjournal.ru/s/caticide
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Electronic">
            <summary>
            https://tjournal.ru/s/electronic
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Future">
            <summary>
            https://tjournal.ru/s/future
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Canada">
            <summary>
            https://tjournal.ru/s/canada
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Feminism">
            <summary>
            https://tjournal.ru/s/feminism
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.TopKek">
            <summary>
            https://tjournal.ru/topkek
            <para/>
            Also known as: Memes
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Male">
            <summary>
            https://tjournal.ru/s/male
            <para/>
            Also known as: Masculism
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Vhs">
            <summary>
            https://tjournal.ru/s/vhs
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Eco">
            <summary>
            https://tjournal.ru/s/eco
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Minecraft">
            <summary>
            https://tjournal.ru/s/minecraft
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Tiktok">
            <summary>
            https://tjournal.ru/tiktok
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.NoContext">
            <summary>
            https://tjournal.ru/s/nocontext
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Krasnodar">
            <summary>
            https://tjournal.ru/s/krasnodar
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.MagicPeople">
            <summary>
            https://tjournal.ru/s/magic-people
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Grozny">
            <summary>
            https://tjournal.ru/s/grozny
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Stonks">
            <summary>
            https://tjournal.ru/s/stonks
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Poetry">
            <summary>
            https://tjournal.ru/s/poetry
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Graf">
            <summary>
            https://tjournal.ru/s/graf
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Zagolovki">
            <summary>
            https://tjournal.ru/zagolovki
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Wolfs">
            <summary>
            https://tjournal.ru/s/wolfs
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.ChessClub">
            <summary>
            https://tjournal.ru/s/chessclub
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Culture">
            <summary>
            https://tjournal.ru/s/culture
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Opinions">
            <summary>
            https://tjournal.ru/opinions
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.Podderzhka">
            <summary>
            https://tjournal.ru/s/podderzhka
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.TjournalSubsiteIds.ZakonVneZakona">
            <summary>
            https://tjournal.ru/s/zakonvnezakona
            </summary>
        </member>
        <member name="T:Osnova.Net.Constants.VcSubsiteIds">
            <summary>
            Ids of most VC's subsites
            <para/>
            Info sources:
            <para/>
            https://vc.ru/sitemap/standard
            <para/>
            https://api.vc.ru/v2.0/onboarding
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Marketing">
            <summary>
            https://vc.ru/marketing
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Design">
            <summary>
            https://vc.ru/design
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Transport">
            <summary>
            https://vc.ru/transport
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Tribuna">
            <summary>
            https://vc.ru/tribuna
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Tech">
            <summary>
            https://vc.ru/tech
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Future">
            <summary>
            https://vc.ru/future
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Finance">
            <summary>
            https://vc.ru/finance
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Legal">
            <summary>
            https://vc.ru/legal
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Hr">
            <summary>
            https://vc.ru/hr
            <para/>
            Also known as: Career
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Trade">
            <summary>
            https://vc.ru/trade
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Life">
            <summary>
            https://vc.ru/life
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Claim">
            <summary>
            https://vc.ru/claim
            <para/>
            Also known as: Priemnaya
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Ask">
            <summary>
            https://vc.ru/ask
            <para/>
            Also known as: Questions
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Crypto">
            <summary>
            https://vc.ru/crypto
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Seo">
            <summary>
            https://vc.ru/seo
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Food">
            <summary>
            https://vc.ru/food
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Social">
            <summary>
            https://vc.ru/social
            <para/>
            Also known as: Social Networks
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Media">
            <summary>
            https://vc.ru/media
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Story">
            <summary>
            https://vc.ru/story
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Offline">
            <summary>
            https://vc.ru/offline
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Bugs">
            <summary>
            https://vc.ru/bugs
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Flood">
            <summary>
            https://vc.ru/flood
            <para/>
            Also known as: Offtop
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Services">
            <summary>
            https://vc.ru/services
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Office">
            <summary>
            https://vc.ru/office
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Dev">
            <summary>
            https://vc.ru/dev
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Workdays">
            <summary>
            https://vc.ru/workdays
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Links">
            <summary>
            https://vc.ru/links
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Ml">
            <summary>
            https://vc.ru/ml
            <para/>
            Also known as: Machine Learning
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.ProductHunt">
            <summary>
            https://vc.ru/producthunt
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Books">
            <summary>
            https://vc.ru/books
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.ApiTets">
            <summary>
            https://vc.ru/apitests
            <para/>
            Also known as: Polygon
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.SandboxSpb">
            <summary>
            https://vc.ru/s/sandbox-spb
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.SandboxVk">
            <summary>
            https://vc.ru/s/sandbox-vk
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.DataGang">
            <summary>
            https://vc.ru/s/datagang
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Deryabushki">
            <summary>
            https://vc.ru/s/Deryabushki
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Migrate">
            <summary>
            https://vc.ru/migrate
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Education">
            <summary>
            https://vc.ru/education
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Growth">
            <summary>
            https://vc.ru/growth
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Video">
            <summary>
            https://vc.ru/video
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Stonks">
            <summary>
            https://vc.ru/s/stonks
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Opinions">
            <summary>
            https://vc.ru/opinions
            </summary>
        </member>
        <member name="F:Osnova.Net.Constants.VcSubsiteIds.Dtf">
            <summary>
            https://vc.ru/dtf
            </summary>
        </member>
        <member name="M:Osnova.Net.Core.ConvertSubsiteTimelineSorting(Osnova.Net.Enums.SubsiteTimelineSorting)">
            <summary>
            Warning: adds `/` at the beginning of string, is not empty, e.g.: /new
            </summary>
            <param name="subsiteTimelineSorting"></param>
            <returns></returns>
        </member>
        <member name="P:Osnova.Net.Cover.ThumbnailUrl">
            <summary>
            Cover's thumbnail URL
            </summary>
        </member>
        <member name="P:Osnova.Net.Cover.Url">
            <summary>
            Cover URL
            </summary>
        </member>
        <member name="P:Osnova.Net.Cover.Size">
            <summary>
            Cover's size
            </summary>
        </member>
        <member name="P:Osnova.Net.Cover.SizeSimple">
            <summary>
            Simplified cover size
            </summary>
        </member>
        <member name="T:Osnova.Net.Entries.Entry">
            <summary>
            Entry or "post" on osnova websites
            <para/>
            <remarks>Includes implementation of official Entry docs
            and properties from actual queries</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Id">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Title">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.WebviewUrl">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.EntryLayout">
            <inheritdoc />
            <para/>
            <remarks>Refers to "entryContent" property in json</remarks>
        </member>
        <member name="P:Osnova.Net.Entries.Entry.DateCreated">
            <inheritdoc />
            <para/>
            <remarks>Refers to "date" property in json</remarks>
        </member>
        <member name="P:Osnova.Net.Entries.Entry.DateCreatedRfc">
            <inheritdoc />
            <para/>
            <remarks>Refers to "dateRFC" property in json</remarks>
        </member>
        <member name="P:Osnova.Net.Entries.Entry.LastModificationDate">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Author">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Type">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Intro">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Cover">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.IntroInFeed">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Similar">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.ViewsCount">
            <inheritdoc />
            <para/>
            <remarks>Refers to "hitsCount" property in json</remarks>
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Likes">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.CommentsPreview">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.CommentsCount">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.FavoritesCount">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.IsFavorited">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.IsEnabledLikes">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.IsEnabledComments">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.IsEditorial">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.IsPinned">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.AudioUrl">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Badges">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.CommentatorsAvatars">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Subsite">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Hotness">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.SubscribedToComments">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Blocks">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.CanEdit">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.DateFavorite">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.IsRepost">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.IsPromoted">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Repost">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.CommentsSeenCount">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.AdditionalControls">
            <inheritdoc />
            <para/>
            <remarks>Refers to "etcControls" property in json</remarks>
        </member>
        <member name="P:Osnova.Net.Entries.Entry.IsShowThanks">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.IsStillUpdating">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.IsFilledByEditors">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.CoAuthor">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Url">
            <summary>
            This entry's URL
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Highlight">
            <summary>
            Highlight
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.Entry.CommentEditorSettings">
            <summary>
            Settings for comment editor
            <para/>
            <remarks>Refers to "commentEditor" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.Entry.Summarize">
            <summary>
            Summarize the entry content
            </summary>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.#ctor">
            <summary>
            Creates a default, empty entry
            </summary>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.#ctor(System.String,System.Collections.Generic.IEnumerable{Osnova.Net.Blocks.Block})">
            <summary>
            Creates minimal postable entry
            </summary>
            <param name="title">Title of this entry</param>
            <param name="blocks">Blocks inside of this entry</param>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetDefaultEntryUrl(Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets default entry URL
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/entry</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetEntryUri(Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets an URL to get entry by id
            <para/>
            <remarks>Original name: getEntryById</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/entry/0</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetEntryResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets entry by id
            <para/>
            <remarks>Original name: getEntryById</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested entry</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetEntryAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets entry by id
            <para/>
            <remarks>Original name: getEntryById</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested entry</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetPopularEntriesUri(Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets an URL to get popular entries, similar to specified id
            <para/>
            <remarks>Original name: getPopularEntries</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/entry/0/popular</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetPopularEntriesResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets popular entries, similar to specified id
            <para/>
            <remarks>Original name: getPopularEntries</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested collection of entries</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetPopularEntriesAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Double)">
            <summary>
            Gets popular entries, similar to specified id
            <para/>
            <remarks>Original name: getPopularEntries</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested collection of entries</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetEntryLocateUri(Osnova.Net.Enums.WebsiteKind,System.Uri,System.Double)">
            <summary>
            Gets an URL to get entry by it's URL
            <para/>
            <remarks>Original name: getEntryLocate</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="entryUri">Entry's URL</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/entry/locate?url=https://dtf.ru/0</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetEntryLocateResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Uri,System.Double)">
            <summary>
            Gets entry by it's URL
            <para/>
            <remarks>Original name: getEntryLocate</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryUri">Entry's URL</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested entry</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetEntryLocateAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Uri,System.Double)">
            <summary>
            Gets entry by it's URL
            <para/>
            <remarks>Original name: getEntryLocate</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryUri">Entry's URL</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested entry</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetCommentsUri(Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Enums.CommentSorting,System.Double)">
            <summary>
            Gets an URL to get all comments
            <para/>
            <remarks>Original name: getEntryComments</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="sorting">Sorting of comments</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/entry/0/comments/date</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetCommentsResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Enums.CommentSorting,System.Double)">
            <summary>
            Gets comments for specified entry
            <para/>
            <remarks>Original name: getEntryComments</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="sorting">Sorting of comments</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested comments</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetCommentsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Enums.CommentSorting,System.Double)">
            <summary>
            Gets comments for specified entry
            <para/>
            <remarks>Original name: getEntryComments</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="sorting">Sorting of comments</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested comments</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetCommentsThreadsUri(Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Enums.CommentSorting,System.Double)">
            <summary>
            Gets an URL to get comments threads
            <para/>
            <remarks>Original name: getEntryCommentsLevels</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="sorting">Sorting of comments</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/entry/0/comments/levels/date</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetCommentsThreadsResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Enums.CommentSorting,System.Double)">
            <summary>
            Gets comments threads for specified entry
            <para/>
            <remarks>Original name: getEntryCommentsLevels</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="sorting">Sorting of comments</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested comments threads</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetCommentsThreadsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Enums.CommentSorting,System.Double)">
            <summary>
            Gets comments threads for specified entry
            <para/>
            <remarks>Original name: getEntryCommentsLevels</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="sorting">Sorting of comments</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested comments threads</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetCommentThreadUri(Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Double)">
            <summary>
            Gets an URL to get thread for specified comment
            <para/>
            <remarks>Original name: getEntryCommentsThread</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="commentId">Comment id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/entry/0/comments/thread/0</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetCommentThreadResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Double)">
            <summary>
            Gets thread for specified comment
            <para/>
            <remarks>Original name: getEntryCommentsThread</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="commentId">Comment id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested thread</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetCommentThreadAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Double)">
            <summary>
            Gets thread for specified comment
            <para/>
            <remarks>Original name: getEntryCommentsThread</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="entryId">Entry id</param>
            <param name="commentId">Comment id</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested thread</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.GetEntryCreateUri(Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets an URL to post entry
            <para/>
            <remarks>Original name: postEntryCreate</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/entry/create</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.PostEntryCreateResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Entries.Entry,System.Double)">
            <summary>
            Posts an entry and returns it
            <para/>
            <remarks>Original name: postEntryCreate</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="subsiteId">Subsite to post</param>
            <param name="entry">Entry to create</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready entry</returns>
        </member>
        <member name="M:Osnova.Net.Entries.Entry.PostEntryCreateAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,Osnova.Net.Entries.Entry,System.Double)">
            <summary>
            Posts an entry and returns it
            <para/>
            <remarks>Original name: postEntryCreate</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="subsiteId">Subsite to post</param>
            <param name="entry">Entry to create</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready entry</returns>
        </member>
        <member name="T:Osnova.Net.Entries.EntryLayout">
            <summary>
            Also known as "EntryContent"
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.EntryLayout.Html">
            <summary>
            Full HTML content of the entry
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.EntryLayout.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="M:Osnova.Net.Entries.EntryLayout.GetDefaultLayoutUrl(Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets default layout URL
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/layout</returns>
        </member>
        <member name="T:Osnova.Net.Entries.IEntry">
            <summary>
            Refers to specification of Entry on official API docs
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.Id">
            <summary>
            Identifier
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.WebviewUrl">
            <summary>
            Link to open entry
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.EntryLayout">
            <summary>
            Contains ready html and version
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.DateCreated">
            <summary>
            Entry's creation date
            <para/>
            <remarks>Converts from/to <see cref="T:System.Int64"/></remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.DateCreatedRfc">
            <summary>
            Entry's creation date
            <para/>
            <remarks>Converts from/to RFC2822 string</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.LastModificationDate">
            <summary>
            Entry's last modification date
            <para/>
            <remarks>Converts from/to <see cref="T:System.Int64"/></remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.Author">
            <summary>
            Author
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.Type">
            <summary>
            Content type
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.Intro">
            <summary>
            Entry's intro
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.IntroInFeed">
            <summary>
            Entry's intro in feed
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.Similar">
            <summary>
            Collection of similar entries
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.ViewsCount">
            <summary>
            Count of views of this entry
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.Likes">
            <summary>
            Likes of this entry
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.CommentsPreview">
            <summary>
            Preview collection of comments of this entry
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.CommentsCount">
            <summary>
            Count of comments of this entry
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.FavoritesCount">
            <summary>
            Count of times this entry was added to favorites
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.IsFavorited">
            <summary>
            Current user favorited this entry?
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.IsEnabledLikes">
            <summary>
            Are likes enabled on this entry?
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.IsEnabledComments">
            <summary>
            Are comments enabled on this entry?
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.IsEditorial">
            <summary>
            Is this editorial entry?
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.IsPinned">
            <summary>
            Is this entry pinned?
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.AudioUrl">
            <summary>
            Url to voiced version of entry if it exists
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.CommentatorsAvatars">
            <summary>
            Collection of commentators avatars urls for preview
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.Subsite">
            <summary>
            Subsite, where this entry was created
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.SubscribedToComments">
            <summary>
            Is current user subscribed to comments?
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.Blocks">
            <summary>
            Collection of blocks in entry
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.CanEdit">
            <summary>
            Can current user edit this post?
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.DateFavorite">
            <summary>
            Date, when this entry was added to favorites
            <para/>
            <remarks>Converts from/to <see cref="T:System.Int64"/></remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.IsRepost">
            <summary>
            Is this repost?
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.IsPromoted">
            <summary>
            Is this promoted entry?
            </summary>
        </member>
        <member name="P:Osnova.Net.Entries.IEntry.IsStillUpdating">
            <summary>
            Is this entry still updating?
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.Alignment">
            <summary>
            Alignment of the element
            <para/>
            <remarks>Uses default string-to-enum converter</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.Alignment.Left">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.Alignment.Centered">
            <summary>
            Centered
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.Alignment.Top">
            <summary>
            Top
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.Alignment.Bottom">
            <summary>
            Bottom
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.AudioChannel">
            <summary>
            Audio channels
            <para/>
            <remarks>Uses default string-to-enum converter</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.AudioChannel.Stereo">
            <summary>
            Stereo
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.AudioChannel.JointStereo">
            <summary>
            Joint stereo
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.AudioChannel.Mono">
            <summary>
            Mono
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.AudioExtension">
            <summary>
            Audio file's extensions
            <para/>
            <remarks>Uses default string-to-enum converter</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.AudioExtension.Mp3">
            <summary>
            mp3
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.BlockType">
            <summary>
            Type of blocks
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Unknown">
            <summary>
            Unknown type. You should throw an exception if you got this
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Audio">
            <summary>
            Audio
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Delimiter">
            <summary>
            Delimiter
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Entry">
            <summary>
            Entry
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Header">
            <summary>
            Header
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Incut">
            <summary>
            Incut
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Instagram">
            <summary>
            Instagram
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Link">
            <summary>
            Link
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.List">
            <summary>
            List
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Media">
            <summary>
            Media block with children blocks
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Movie">
            <summary>
            Video block
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Number">
            <summary>
            Number
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Person">
            <summary>
            PErson
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Quiz">
            <summary>
            Quiz
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Quote">
            <summary>
            Quote
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.RawHtml">
            <summary>
            Raw html
            <para/>
            <remarks>This is editorial block</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.SpecialButton">
            <summary>
            Special button
            <para/>
            <remarks>This is editorial block</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Spotify">
            <summary>
            Spotify
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Telegram">
            <summary>
            Telegram
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.TikTok">
            <summary>
            TikTok
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Tweet">
            <summary>
            Tweet
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.UniversalBox">
            <summary>
            Universal box
            <para/>
            <remarks>Used for some subtypes, like TikTok</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.User">
            <summary>
            User
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Video">
            <summary>
            Video
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Warning">
            <summary>
            Warning
            <para/>
            <remarks>This is editorial block</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.Waterfall">
            <summary>
            Refers to "wtrfall"
            <para/>
            <remarks>This is editorial block</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.BlockType.YandexMusic">
            <summary>
            Refers to "yamusic"
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.ContentType">
            <summary>
            Type of content
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ContentType.Entry">
            <summary>
            Entry
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ContentType.Vacancy">
            <summary>
            Vacancy
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ContentType.StaticPage">
            <summary>
            Static page
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ContentType.Event">
            <summary>
            Event
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ContentType.Repost">
            <summary>
            Repost
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ContentType.Comment">
            <summary>
            Comment
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.DelimiterType">
            <summary>
            Delimiter type
            <para/>
            <remarks>Uses default string-to-enum converter</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.DelimiterType.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.ExternalServiceType">
            <summary>
            External service type
            <para/>
            <remarks>Uses default string-to-enum converter</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ExternalServiceType.Instagram">
            <summary>
            Instagram
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ExternalServiceType.YaMusic">
            <summary>
            Yandex music
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ExternalServiceType.Spotify">
            <summary>
            Spotify
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ExternalServiceType.TikTok">
            <summary>
            TikTok
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.HeaderStyle">
            <summary>
            Header style/level
            <para/>
            <remarks>Uses default string-to-enum converter</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.HeaderStyle.H2">
            <summary>
            Level 2 header
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.HeaderStyle.H3">
            <summary>
            Level 3 header
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.HeaderStyle.H4">
            <summary>
            Level 4 header
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.ListType">
            <summary>
            Types of lists
            <para/>
            <remarks>Uses custom converter</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ListType.UnorderedList">
            <summary>
            Unordered list
            <para/>
            <remarks>Refers to "UL" in json</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.ListType.OrderedList">
            <summary>
            Ordered list
            <para/>
            <remarks>Refers to "OL" in json</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.MediaExtension">
            <summary>
            Extensions of media files
            <para/>
            <remarks>Uses default string-to-enum converter</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.MediaExtension.Png">
            <summary>
            Png
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.MediaExtension.Jpg">
            <summary>
            Jpg
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.MediaExtension.Webp">
            <summary>
            Webp
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.MediaExtension.Gif">
            <summary>
            Gif
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.MediaExtension.Mp4">
            <summary>
            Mp4
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.MediaType">
            <summary>
            Types of media content in comments
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.MediaType.Image">
            <summary>
            Image
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.MediaType.Video">
            <summary>
            Video
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.NotificationIcon">
            <summary>
            Notification's icons
            <para/>
            <remarks>Uses custom converter</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationIcon.Comment">
            <summary>
            New comment
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationIcon.Reply">
            <summary>
            Reply
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationIcon.LikeUp">
            <summary>
            Liked
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationIcon.LikeDown">
            <summary>
            Disliked
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationIcon.Subscribe">
            <summary>
            Subscribed
            <para/>
            <remarks>Refers to "mini_check" in json</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationIcon.Archive">
            <summary>
            Advertisement removed
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationIcon.Plus">
            <summary>
            Advertisement added
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationIcon.Upset">
            <summary>
            Unpublished entry
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationIcon.Mention">
            <summary>
            Mentioned somewhere
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.NotificationType">
            <summary>
            Notification types
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationType.Like">
            <summary>
            Like
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationType.Reply">
            <summary>
            Reply
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationType.Banned">
            <summary>
            Banned
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationType.Unpublish">
            <summary>
            Unpublished entry
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationType.Comment">
            <summary>
            New comment
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationType.System">
            <summary>
            System notification
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationType.Vacancy">
            <summary>
            Vacancy
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationType.Mention">
            <summary>
            Mentioned somewhere
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationType.Subscribe">
            <summary>
            New subscriber
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.NotificationType.Advertisement">
            <summary>
            Advertisement
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.QuoteType">
            <summary>
            Quote type
            <para/>
            <remarks>Uses default string-to-enum converter</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.QuoteType.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.QuoteType.Opinion">
            <summary>
            Opinion
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.SocialType">
            <summary>
            Connected social account type. Used for login
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.SocialType.Qr">
            <summary>
            Qr-code
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.SocialType.Twitter">
            <summary>
            Twitter
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.SocialType.Vk">
            <summary>
            Vkontakte
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.SocialType.Facebook">
            <summary>
            Facebook
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.SocialType.GooglePlus">
            <summary>
            Google+
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.SourceOs">
            <summary>
            Operating system type
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.SourceOs.Other">
            <summary>
            PC and other platforms
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.SourceOs.Ios">
            <summary>
            iOS
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.SourceOs.Android">
            <summary>
            Android
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.SubsiteTypes">
            <summary>
            Types of subsites
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.SubsiteTypes.Sections">
            <summary>
            Usual subsite
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.SubsiteTypes.Companies">
            <summary>
            Company subsite
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.TextSize">
            <summary>
            Text's size
            <para/>
            <remarks>Uses default string-to-enum converter</remarks>
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.TextSize.Small">
            <summary>
            Small
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.TextSize.Medium">
            <summary>
            Medium
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.TextSize.Big">
            <summary>
            Big
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.TimelineCategory">
            <summary>
            Timeline categories
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.TimelineCategory.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.TimelineCategory.GameDev">
            <summary>
            Game development
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.TimelineCategory.MainPage">
            <summary>
            Main page
            </summary>
        </member>
        <member name="T:Osnova.Net.Enums.WebsiteKind">
            <summary>
            Kind of website to use API
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.WebsiteKind.Dtf">
            <summary>
            https://dtf.ru
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.WebsiteKind.Tjournal">
            <summary>
            https://tjournal.ru
            </summary>
        </member>
        <member name="F:Osnova.Net.Enums.WebsiteKind.Vc">
            <summary>
            https://vc.ru
            </summary>
        </member>
        <member name="T:Osnova.Net.Exceptions.InvalidResponseCodeException">
            <summary>
            Exception signals, that response code from API was not correct
            </summary>
        </member>
        <member name="M:Osnova.Net.Exceptions.InvalidResponseCodeException.#ctor">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.Exceptions.InvalidResponseCodeException.#ctor(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.Exceptions.InvalidResponseCodeException.#ctor(System.String,System.Exception)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.ExternalServices.AdditionalExternalServiceData">
            <summary>
            Additional data for external service's media
            </summary>
        </member>
        <member name="P:Osnova.Net.ExternalServices.AdditionalExternalServiceData.Hash">
            <summary>
            Hash
            </summary>
        </member>
        <member name="T:Osnova.Net.ExternalServices.ExternalService">
            <summary>
            External service with some media data
            </summary>
        </member>
        <member name="P:Osnova.Net.ExternalServices.ExternalService.Name">
            <summary>
            Name of service
            </summary>
        </member>
        <member name="P:Osnova.Net.ExternalServices.ExternalService.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Osnova.Net.ExternalServices.ExternalService.Mp4Url">
            <summary>
            URL of mp5 video, if any
            </summary>
        </member>
        <member name="P:Osnova.Net.ExternalServices.ExternalService.AdditionalData">
            <summary>
            Some additional data
            </summary>
        </member>
        <member name="T:Osnova.Net.Filters.IEventFilter">
            <summary>
            Refers to EventFilter spec
            </summary>
        </member>
        <member name="P:Osnova.Net.Filters.IEventFilter.Id">
            <summary>
            Event ID
            </summary>
        </member>
        <member name="P:Osnova.Net.Filters.IEventFilter.Title">
            <summary>
            Event title
            </summary>
        </member>
        <member name="T:Osnova.Net.Filters.VacancyEventFilter">
            <summary>
            Fits for both <see cref="T:Osnova.Net.OsnovaEvents.OsnovaEvent"/> and <see cref="T:Osnova.Net.Vacancies.Vacancy"/>
            </summary>
        </member>
        <member name="P:Osnova.Net.Filters.VacancyEventFilter.Id">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Filters.VacancyEventFilter.Title">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Filters.VacancyEventFilter.IsActive">
            <summary>
            Is still active?
            </summary>
        </member>
        <member name="P:Osnova.Net.Filters.VacancyEventFilter.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Osnova.Net.Filters.VacancyEventFilter.Culture">
            <summary>
            Applies to which country?
            <para/>
            <remarks>Refers to "country_code" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Filters.VacancyEventFilter.ContentCount">
            <summary>
            Content count
            </summary>
        </member>
        <member name="T:Osnova.Net.JsonConverters.BlockJsonConverter">
            <summary>
            Converts <see cref="T:Osnova.Net.Blocks.Block"/> to specified children type
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.BlockJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.BlockJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Osnova.Net.Blocks.Block,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.BlockTypeJsonConverter">
            <summary>
            Converts <see cref="T:Osnova.Net.Enums.BlockType"/> enum to/from <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.BlockTypeJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.BlockTypeJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Osnova.Net.Enums.BlockType,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="T:Osnova.Net.JsonConverters.ColorJsonConverter">
            <summary>
            Converts argb:x6-<see cref="T:System.Drawing.Color"/> to/from <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.ColorJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.ColorJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Drawing.Color,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.CultureInfoJsonConverter">
            <summary>
            Converts <see cref="T:System.Globalization.CultureInfo"/> to/from <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.CultureInfoJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.CultureInfoJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Globalization.CultureInfo,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.GuidJsonConverter">
            <summary>
            Converts <see cref="T:System.Guid"/> to/from <see cref="T:System.String"/>
            <para/>
            <remarks>If it's not correct -- sets to default value</remarks>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.GuidJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.GuidJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Guid,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.HtmlColorJsonConverter">
            <summary>
            Converts #argb"x6-<see cref="T:System.Drawing.Color"/> to/from <see cref="T:System.String"/>
            <para/>
            <remarks>
            Comparing with <see cref="T:Osnova.Net.JsonConverters.ColorJsonConverter"/>, here string includes "#" symbol
            </remarks>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.HtmlColorJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.HtmlColorJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Drawing.Color,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.IntToBoolJsonConverter">
            <summary>
            Converts <see cref="T:System.Int32"/>, presented in json, to/from <see cref="T:System.Boolean"/>, presented in code
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.IntToBoolJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.IntToBoolJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Boolean,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.ListTypeJsonConverter">
            <summary>
            Converts <see cref="T:Osnova.Net.Enums.ListType"/> to/from <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.ListTypeJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.ListTypeJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Osnova.Net.Enums.ListType,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.LongDateTimeOffsetJsonConverter">
            <summary>
            Converts <see cref="T:System.DateTimeOffset"/>, presented as unix time, to/from <see cref="T:System.Int64"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.LongDateTimeOffsetJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.LongDateTimeOffsetJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTimeOffset,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.NamedColorJsonConverter">
            <summary>
            Converts named <see cref="T:System.Drawing.Color"/> to/from <see cref="T:System.String"/>
            <para/>
            <remarks>
            String example: "blue"
            </remarks>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.NamedColorJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.NamedColorJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Drawing.Color,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.NotificationIconJsonConverter">
            <summary>
            Converts <see cref="T:Osnova.Net.Enums.NotificationIcon"/> enum to/from <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.NotificationIconJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.NotificationIconJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Osnova.Net.Enums.NotificationIcon,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.PopularContentTypeJsonConverter">
            <summary>
            Converts <see cref="T:Osnova.Net.Enums.ContentType"/> enum to/from <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.PopularContentTypeJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.PopularContentTypeJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Osnova.Net.Enums.ContentType,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.PopularJsonConverter">
            <summary>
            Converts <see cref="T:Osnova.Net.Popular.PopularBase"/> to specified children type
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.PopularJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.PopularJsonConverter.Write(System.Text.Json.Utf8JsonWriter,Osnova.Net.Popular.PopularBase,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.RateValueJsonConverter">
            <summary>
            Converts rates <see cref="T:System.Double"/> values to/from <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.RateValueJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.RateValueJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Double,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.RfcDateTimeOffsetJsonConverter">
            <summary>
            Converts <see cref="T:System.DateTimeOffset"/> to/from RFC2822 <see cref="T:System.String"/>
            <para/>
            <remarks>Pattern: ddd, dd MMM yyyy HH':'mm':'ss K</remarks>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.RfcDateTimeOffsetJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.RfcDateTimeOffsetJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTimeOffset,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.StringToEnumJsonConverter`1">
            <summary>
            Converts any case-insensitive <see cref="T:System.Enum"/> to/from <see cref="T:System.String"/>
            </summary>
            <typeparam name="T"><see cref="T:System.Enum"/></typeparam>
        </member>
        <member name="M:Osnova.Net.JsonConverters.StringToEnumJsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.StringToEnumJsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.TwitterV1DateTimeOffsetJsonConverter">
            <summary>
            Converts Twitter's v1.1 spec's <see cref="T:System.DateTimeOffset"/> to/from <see cref="T:System.String"/>
            <para/>
            <remarks>Pattern: ddd MMM dd HH':'mm':'ss K yyyy</remarks>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.TwitterV1DateTimeOffsetJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.TwitterV1DateTimeOffsetJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.DateTimeOffset,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.VersionJsonConverter">
            <summary>
            Converts <see cref="T:System.Version"/> to/from <see cref="T:System.Int32"/>/<see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:Osnova.Net.JsonConverters.VersionJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.VersionJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Version,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.JsonConverters.WrongEmptyArrayJsonConverter`1">
            <summary>
            Converts value, that sometimes (by mistakes) can be empty array in json
            <para/>
            <remarks>Returns <see langword="null"/>, if couldn't convert an object</remarks>
            </summary>
            <typeparam name="T">Any <see langword="class"/></typeparam>
        </member>
        <member name="M:Osnova.Net.JsonConverters.WrongEmptyArrayJsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.JsonConverters.WrongEmptyArrayJsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Likes.Count">
            <summary>
            Count of likes
            </summary>
        </member>
        <member name="P:Osnova.Net.Likes.Sum">
            <summary>
            Sum value of likes/dislikes
            </summary>
        </member>
        <member name="P:Osnova.Net.Likes.IsLiked">
            <summary>
            Is current logged user liked this?
            </summary>
        </member>
        <member name="P:Osnova.Net.MediaItem.Title">
            <summary>
            Media item's title
            </summary>
        </member>
        <member name="P:Osnova.Net.MediaItem.Author">
            <summary>
            Media item's author
            </summary>
        </member>
        <member name="P:Osnova.Net.MediaItem.Image">
            <summary>
            Media items' content
            </summary>
        </member>
        <member name="M:Osnova.Net.Mentions.GetSearchForMentionsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.String,System.Double)">
            <summary>
            Requires authentication
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="T:Osnova.Net.Notifications.INotification">
            <summary>
            Refers to Notification spec
            </summary>
        </member>
        <member name="P:Osnova.Net.Notifications.INotification.Id">
            <summary>
            Notification ID
            </summary>
        </member>
        <member name="P:Osnova.Net.Notifications.INotification.Type">
            <summary>
            Notification type
            </summary>
        </member>
        <member name="P:Osnova.Net.Notifications.INotification.Date">
            <summary>
            Notification date
            </summary>
        </member>
        <member name="P:Osnova.Net.Notifications.INotification.DateRfc">
            <summary>
            Notification date in RFC2822 format
            </summary>
        </member>
        <member name="P:Osnova.Net.Notifications.INotification.Users">
            <summary>
            Collection of <see cref="T:Osnova.Net.Users.User"/>s
            </summary>
        </member>
        <member name="P:Osnova.Net.Notifications.INotification.Text">
            <summary>
            Notification text
            </summary>
        </member>
        <member name="P:Osnova.Net.Notifications.INotification.Icon">
            <summary>
            Notification's icon
            </summary>
        </member>
        <member name="T:Osnova.Net.Notifications.Notification">
            <summary>
            Notification
            </summary>
        </member>
        <member name="P:Osnova.Net.Notifications.Notification.Id">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Notifications.Notification.Type">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Notifications.Notification.Date">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Notifications.Notification.DateRfc">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Notifications.Notification.Users">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Notifications.Notification.Text">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Notifications.Notification.CommentText">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Notifications.Notification.Url">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Notifications.Notification.Icon">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.OsnovaEvents.IOsnovaEvent">
            <summary>
            Refers to Event spec
            </summary>
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.IOsnovaEvent.Id">
            <summary>
            Event ID
            </summary>
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.IOsnovaEvent.Title">
            <summary>
            Event title
            </summary>
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.IOsnovaEvent.IsArchived">
            <summary>
            Is this event archived?
            </summary>
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.IOsnovaEvent.CityId">
            <summary>
            City ID
            </summary>
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.IOsnovaEvent.CityName">
            <summary>
            City name
            </summary>
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.IOsnovaEvent.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.IOsnovaEvent.FavoritesCount">
            <summary>
            Favorites count
            </summary>
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.IOsnovaEvent.IsFavorited">
            <summary>
            Is this event favorited?
            </summary>
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.IOsnovaEvent.Company">
            <summary>
            Company
            </summary>
        </member>
        <member name="T:Osnova.Net.OsnovaEvents.OsnovaEvent">
            <summary>
            Also known as Event
            </summary>
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.Id">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.Title">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.IsArchived">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.EntryId">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.CityId">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.CityName">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.Price">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.FavoritesCount">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.IsFavorited">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.Company">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.Interested">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.OsnovaEvents.OsnovaEvent.Date">
            <summary>
            Event's date
            </summary>
        </member>
        <member name="M:Osnova.Net.OsnovaEvents.OsnovaEvent.GetDefaultEventsUrl(Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets default events URL
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/events</returns>
        </member>
        <member name="M:Osnova.Net.OsnovaEvents.OsnovaEvent.GetEventsFiltersUri(Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets an URL to get event filters
            <para/>
            <remarks>Original name: getEventsFilters</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/events/filters</returns>
        </member>
        <member name="M:Osnova.Net.OsnovaEvents.OsnovaEvent.GetEventsFiltersResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets events filters
            <para/>
            <remarks>Original name: getEventsFilters</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested events filters</returns>
        </member>
        <member name="M:Osnova.Net.OsnovaEvents.OsnovaEvent.GetEventsFiltersAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets events filters
            <para/>
            <remarks>Original name: getEventsFilters</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested events filters</returns>
        </member>
        <member name="M:Osnova.Net.OsnovaEvents.OsnovaEvent.GetEventsUri(Osnova.Net.Enums.WebsiteKind,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Double)">
            <summary>
            Gets an URL to get events
            <para/>
            <remarks>Original name: getEvents</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="cityId">City ID</param>
            <param name="specializationIds">Specialization ID's collection</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.vc.ru/v1.9/events?city_id=0</returns>
        </member>
        <member name="M:Osnova.Net.OsnovaEvents.OsnovaEvent.GetEventsResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Double)">
            <summary>
            Gets events
            <para/>
            <remarks>Original name: getEvents</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="cityId">City ID</param>
            <param name="specializationIds">Specialization ID's collection</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested events</returns>
        </member>
        <member name="M:Osnova.Net.OsnovaEvents.OsnovaEvent.GetEventsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Double)">
            <summary>
            Gets events
            <para/>
            <remarks>Original name: getEvents</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="cityId">City ID</param>
            <param name="specializationIds">Specialization ID's collection</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested events</returns>
        </member>
        <member name="M:Osnova.Net.OsnovaEvents.OsnovaEvent.GetMoreEventsUri(Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Double)">
            <summary>
            Gets an URL to get more events
            <para/>
            <remarks>Original name: getEventsMore</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="lastId">Last event's ID of previous query</param>
            <param name="cityId">City ID</param>
            <param name="specializationIds">Specialization ID's collection</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.vc.ru/v1.9/events/more/0?city_id=0</returns>
        </member>
        <member name="M:Osnova.Net.OsnovaEvents.OsnovaEvent.GetMoreEventsResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Double)">
            <summary>
            Gets more events
            <para/>
            <remarks>Original name: getEventsMore</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="lastId">Last event's ID of previous query</param>
            <param name="cityId">City ID</param>
            <param name="specializationIds">Specialization ID's collection</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested events</returns>
        </member>
        <member name="M:Osnova.Net.OsnovaEvents.OsnovaEvent.GetMoreEventsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Int32},System.Double)">
            <summary>
            Gets more events
            <para/>
            <remarks>Original name: getEventsMore</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="lastId">Last event's ID of previous query</param>
            <param name="cityId">City ID</param>
            <param name="specializationIds">Specialization ID's collection</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested events</returns>
        </member>
        <member name="M:Osnova.Net.Payments.GetPaymentsCheckAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Requires authentication!
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="T:Osnova.Net.Popular.PopularBase">
            <summary>
            Popular entries/comments
            </summary>
        </member>
        <member name="P:Osnova.Net.Popular.PopularBase.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Osnova.Net.Popular.PopularBase.Type">
            <summary>
            Content type (entry or comment)
            <para/>
            <remarks>Refers to "item_type" property in json</remarks>
            </summary>
        </member>
        <member name="M:Osnova.Net.Popular.PopularBase.#ctor(Osnova.Net.Enums.ContentType)">
            <summary>
            Create new popular object of specified type
            </summary>
            <param name="type">Type of popular object</param>
        </member>
        <member name="M:Osnova.Net.Popular.PopularBase.GetPopularType">
            <summary>
            Get real <see cref="T:System.Type"/> of this object
            </summary>
            <returns><see cref="T:System.Type"/></returns>
        </member>
        <member name="M:Osnova.Net.Popular.PopularBase.GetPopularType(Osnova.Net.Enums.ContentType)">
            <summary>
            Get real <see cref="T:System.Type"/>
            </summary>
            <param name="type">Enum type of popular object</param>
            <returns><see cref="T:System.Type"/></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Osnova.Net.Popular.PopularBase.GetPopularType(System.String)">
            <summary>
            Get <see cref="T:Osnova.Net.Enums.ContentType"/> from <see cref="T:System.String"/>
            </summary>
            <param name="type">Type as string</param>
            <returns><see cref="T:Osnova.Net.Enums.ContentType"/></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="M:Osnova.Net.Popular.PopularBase.GetPopularTypeString(Osnova.Net.Enums.ContentType)">
            <summary>
            Get <see cref="T:System.String"/> from <see cref="T:Osnova.Net.Enums.ContentType"/>
            </summary>
            <param name="type">Type as string</param>
            <returns><see cref="T:System.String"/></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
        </member>
        <member name="T:Osnova.Net.Popular.PopularComments">
            <summary>
            Popular comments
            </summary>
        </member>
        <member name="P:Osnova.Net.Popular.PopularComments.Items">
            <summary>
            Collection of popular comments
            </summary>
        </member>
        <member name="M:Osnova.Net.Popular.PopularComments.#ctor">
            <summary>
            Creates new empty <see cref="T:Osnova.Net.Popular.PopularComments"/> object
            </summary>
        </member>
        <member name="M:Osnova.Net.Popular.PopularComments.#ctor(System.Collections.Generic.IEnumerable{Osnova.Net.Comments.Comment})">
            <summary>
            Creates new <see cref="T:Osnova.Net.Popular.PopularComments"/> object with items
            </summary>
            <param name="items">Collection of popular comments</param>
        </member>
        <member name="T:Osnova.Net.Popular.PopularEntries">
            <summary>
            Popular entries
            </summary>
        </member>
        <member name="P:Osnova.Net.Popular.PopularEntries.Items">
            <summary>
            Collection of popular entries
            </summary>
        </member>
        <member name="M:Osnova.Net.Popular.PopularEntries.#ctor">
            <summary>
            Creates new empty <see cref="T:Osnova.Net.Popular.PopularEntries"/> object
            </summary>
        </member>
        <member name="M:Osnova.Net.Popular.PopularEntries.#ctor(System.Collections.Generic.IEnumerable{Osnova.Net.Entries.Entry})">
            <summary>
            Creates new <see cref="T:Osnova.Net.Popular.PopularEntries"/> object with items
            </summary>
            <param name="items">Collection of popular entries</param>
        </member>
        <member name="M:Osnova.Net.Push.GetUserPushTopicAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Requires authentication!
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Push.GetUserPushSettingsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Requires authentication!
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="T:Osnova.Net.Quiz.Quiz">
            <summary>
            Quiz
            </summary>
        </member>
        <member name="P:Osnova.Net.Quiz.Quiz.Items">
            <summary>
            Collection of hash/QuizResults
            </summary>
        </member>
        <member name="P:Osnova.Net.Quiz.Quiz.Winner">
            <summary>
            Quiz winner's hash
            </summary>
        </member>
        <member name="P:Osnova.Net.Quiz.Quiz.UserVoted">
            <summary>
            Voted result hash
            </summary>
        </member>
        <member name="M:Osnova.Net.Quiz.Quiz.GetDefaultQuizUrl(Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets default quiz URL
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/quiz</returns>
        </member>
        <member name="M:Osnova.Net.Quiz.Quiz.GetQuizResultsUri(Osnova.Net.Enums.WebsiteKind,System.String,System.Double)">
            <summary>
            Gets an URL to get quiz results
            <para/>
            <remarks>Original name: getQuizResults</remarks>
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="quizHash">Quiz hash</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/quiz/hash/results</returns>
        </member>
        <member name="M:Osnova.Net.Quiz.Quiz.GetQuizResultsResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.String,System.Double)">
            <summary>
            Gets quiz results
            <para/>
            <remarks>Original name: getQuizResults</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="quizHash">Quiz hash</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested quiz's results</returns>
        </member>
        <member name="M:Osnova.Net.Quiz.Quiz.GetQuizResultsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.String,System.Double)">
            <summary>
            Gets quiz results
            <para/>
            <remarks>Original name: getQuizResults</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="quizHash">Quiz hash</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested quiz's results</returns>
        </member>
        <member name="T:Osnova.Net.Quiz.QuizResult">
            <summary>
            Represents part of quiz items collection
            </summary>
        </member>
        <member name="P:Osnova.Net.Quiz.QuizResult.Count">
            <summary>
            Count of votes for this result
            </summary>
        </member>
        <member name="P:Osnova.Net.Quiz.QuizResult.Total">
            <summary>
            Total count of votes in quiz
            </summary>
        </member>
        <member name="P:Osnova.Net.Quiz.QuizResult.Percentage">
            <summary>
            Percentage of votes
            </summary>
        </member>
        <member name="P:Osnova.Net.Quiz.QuizResult.IsWinner">
            <summary>
            Is this result winner?
            </summary>
        </member>
        <member name="T:Osnova.Net.Rates.Rate">
            <summary>
            Currency rate
            </summary>
        </member>
        <member name="P:Osnova.Net.Rates.Rate.Value">
            <summary>
            Rate value
            </summary>
        </member>
        <member name="P:Osnova.Net.Rates.Rate.Change">
            <summary>
            Change
            </summary>
        </member>
        <member name="P:Osnova.Net.Rates.Rate.Symbol">
            <summary>
            Currency symbol
            </summary>
        </member>
        <member name="M:Osnova.Net.Rates.Rate.GetDefaultRatesUri(Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets default rates URL
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/rates</returns>
        </member>
        <member name="M:Osnova.Net.Rates.Rate.GetRatesResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets rates
            <para/>
            <remarks>Original name: getRates</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested rates</returns>
        </member>
        <member name="M:Osnova.Net.Rates.Rate.GetRatesAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Gets rates
            <para/>
            <remarks>Original name: getRates</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested rates</returns>
        </member>
        <member name="T:Osnova.Net.Size">
            <summary>
            Sizes of media content
            </summary>
        </member>
        <member name="P:Osnova.Net.Size.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:Osnova.Net.Size.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:Osnova.Net.Size.Ratio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="T:Osnova.Net.Telegram.TelegramAuthor">
            <summary>
            Author of telegram post
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramAuthor.Name">
            <summary>
            Author's name
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramAuthor.AvatarUrl">
            <summary>
            Author's avatar's URL
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramAuthor.Url">
            <summary>
            Author's URL
            </summary>
        </member>
        <member name="T:Osnova.Net.Telegram.TelegramData">
            <summary>
            Data of telegram post
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramData.Id">
            <summary>
            ID of the post
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramData.Url">
            <summary>
            URL of the post
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramData.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramData.Text">
            <summary>
            Post's text
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramData.Author">
            <summary>
            Post's author
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramData.Photos">
            <summary>
            Collection of photos in post
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramData.Videos">
            <summary>
            Collection of videos in post
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramData.Views">
            <summary>
            Count of views
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramData.DateCreated">
            <summary>
            Date, when this post was created
            <para/>
            <remarks>Refers to "datetime" propert in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramData.IsSupported">
            <summary>
            Is supported?
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramData.ForwardedFrom">
            <summary>
            Author, if post was supported
            </summary>
        </member>
        <member name="T:Osnova.Net.Telegram.TelegramPhoto">
            <summary>
            Telegram image
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramPhoto.Width">
            <summary>
            Width of the image
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramPhoto.Height">
            <summary>
            Height of the image
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramPhoto.LeonardoUrl">
            <summary>
            URL of the image on leonardo
            </summary>
        </member>
        <member name="T:Osnova.Net.Telegram.TelegramVideo">
            <summary>
            Telegram video
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramVideo.Url">
            <summary>
            URL of the video
            <para/>
            <remarks>Refers to "src" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramVideo.ThumbnailUrl">
            <summary>
            Thumbnail image's URL
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramVideo.Ratio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramVideo.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:Osnova.Net.Telegram.TelegramVideo.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.Enterprise.TwitterPoll">
            <summary>
            Twitter poll
            <para/>
            <remarks>API version: 1.1;
            <para/>
            Doc src: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterPoll.Options">
            <summary>
            Collection of options, each having a poll position, and the text for that position
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterPoll.EndDatetime">
            <summary>
            Timestamp (UTC) of when poll ends
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterPoll.DurationMinutes">
            <summary>
            Duration of poll in minutes
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.Enterprise.TwitterPollOption">
            <summary>
            Twitter poll's option
            <para/>
            <remarks>API version: 1.1</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterPollOption.Position">
            <summary>
            Position in poll
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterPollOption.Text">
            <summary>
            Text value
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.Enterprise.TwitterUserDerived">
            <summary>
            API version: 1.1/2.0;
            <para/>
            Doc src: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterUserDerived.Locations">
            <summary>
            Derived location from the profile geo enrichement
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.Enterprise.TwitterUserLocation">
            <summary>
            API version: 1.1/2.0
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterUserLocation.Country">
            <summary>
            Country
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterUserLocation.ConutryCode">
            <summary>
            Country code
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterUserLocation.Locality">
            <summary>
            Locality
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterUserLocation.Region">
            <summary>
            Region
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterUserLocation.SubRegion">
            <summary>
            Subregion
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterUserLocation.FullName">
            <summary>
            Full name
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Enterprise.TwitterUserLocation.Geo">
            <summary>
            Geo coordinates
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.OsnovaTweet">
            <summary>
            Osnova implementation of <see cref="T:Osnova.Net.Twitter.Tweet"/> v 1.1;
            Used for GetTweets method only
            <para/>
            <remarks>Refers to Tweet spec</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTweet.User">
            <summary>
            Tweet's author
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTweet.Id">
            <summary>
            Tweet's ID
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTweet.CreatedAt">
            <summary>
            Date when this tweet was created
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTweet.HasMedia">
            <summary>
            Has media?
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTweet.Media">
            <summary>
            Collection of <see cref="T:Osnova.Net.Twitter.OsnovaTweetMedia"/> elements, if any
            </summary>
        </member>
        <member name="M:Osnova.Net.Twitter.OsnovaTweet.GetTweetsUri(Osnova.Net.Enums.WebsiteKind,Osnova.Net.Enums.TweetSorting,System.Int32,System.Int32,System.Double)">
            <summary>
            Gets tweets URL
            </summary>
            <param name="websiteKind">Kind of website</param>
            <param name="tweetSorting">Sorting of tweets</param>
            <param name="count">Count of tweets</param>
            <param name="offset">Tweet offset</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Ready URL, e.g.: https://api.dtf.ru/v1.9/tweets/fresh?count=10</returns>
        </member>
        <member name="M:Osnova.Net.Twitter.OsnovaTweet.GetTweetsResponseAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,Osnova.Net.Enums.TweetSorting,System.Int32,System.Int32,System.Double)">
            <summary>
            Gets tweets
            <para/>
            <remarks>Original name: getTweets</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="tweetSorting">Sorting of tweets</param>
            <param name="count">Count of tweets</param>
            <param name="offset">Tweet offset</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested tweets</returns>
        </member>
        <member name="M:Osnova.Net.Twitter.OsnovaTweet.GetTweetsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,Osnova.Net.Enums.TweetSorting,System.Int32,System.Int32,System.Double)">
            <summary>
            Gets tweets
            <para/>
            <remarks>Original name: getTweets</remarks>
            </summary>
            <param name="client">Client to send requests</param>
            <param name="websiteKind">Kind of website</param>
            <param name="tweetSorting">Sorting of tweets</param>
            <param name="count">Count of tweets</param>
            <param name="offset">Tweet offset</param>
            <param name="apiVersion">Target version of API</param>
            <returns>Requested tweets</returns>
        </member>
        <member name="T:Osnova.Net.Twitter.OsnovaTweetMedia">
            <summary>
            Osnova implementation of <see cref="T:Osnova.Net.Twitter.TweetMedia"/> v 1.1;
            Used for GetTweets method only
            <para/>
            <remarks>Refers to Tweetmedium spec</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTweetMedia.Type">
            <summary>
            Media type
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTweetMedia.ThumbnailUrl">
            <summary>
            Thumbnail URL
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTweetMedia.ThumbnailWidth">
            <summary>
            Thumbnail's width
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTweetMedia.ThumbnailHeight">
            <summary>
            Thumbnail's height
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTweetMedia.Ratio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.OsnovaTwitterUser">
            <summary>
            Osnova implementation of <see cref="T:Osnova.Net.Twitter.TwitterUser"/> v 1.1;
            Used for GetTweets method only
            <para/>
            <remarks>Refers to TweetUser spec</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTwitterUser.CreatedAt">
            <summary>
            Date, when this user was created
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.OsnovaTwitterUser.ProfileImageUrlBigger">
            <summary>
            Profile image's URL
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.Tweet">
            <summary>
            Usual tweet, used inside blocks
            <para/>
            <remarks>API version: 1.1;
            <para/>
            Doc source: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/tweet
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.CreatedAt">
            <summary>
            UTC time when this Tweet was created
            <para/>
            <remarks>Example: Wed Oct 10 20:19:24 +0000 2018</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Id">
            <summary>
            The integer representation of the unique identifier for this Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.IdString">
            <summary>
            The string representation of the unique identifier for this Tweet
            <para/>
            <remarks>Refers to "id_str" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Text">
            <summary>
            The actual UTF-8 text of the status update
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Source">
            <summary>
            Utility used to post the Tweet, as an HTML-formatted string
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Truncated">
            <summary>
            Indicates whether the value of the text parameter was truncated, for example, as a
            result of a retweet exceeding the original Tweet text length limit of 140 characters
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.InReplyToStatusId">
            <summary>
            If the represented Tweet is a reply, this field will contain the integer representation of the original Tweet’s ID
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.InReplyToStatusIdString">
            <summary>
            If the represented Tweet is a reply, this field will contain the string representation of the original Tweet’s ID
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.InReplyToUserId">
            <summary>
            If the represented Tweet is a reply, this field will contain the integer representation of the original Tweet’s author ID
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.InReplyToUserIdString">
            <summary>
            If the represented Tweet is a reply, this field will contain the string representation of the original Tweet’s author ID
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.InReplyToScreenName">
            <summary>
            If the represented Tweet is a reply, this field will contain the screen name of the original Tweet’s author
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.User">
            <summary>
            The user who posted this Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Coordinates">
            <summary>
            Represents the geographic location of this Tweet as reported by the user or client application
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Place">
            <summary>
            When present, indicates that the tweet is associated (but not necessarily originating from) a Place
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.QuotedStatusId">
            <summary>
            This field only surfaces when the Tweet is a quote Tweet. This field contains the integer value Tweet ID of the quoted Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.QuotedStatusIdString">
            <summary>
            This field only surfaces when the Tweet is a quote Tweet. This is the string representation Tweet ID of the quoted Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.IsQuoteStatus">
            <summary>
            Indicates whether this is a Quoted Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.QuotedStatus">
            <summary>
            This field only surfaces when the Tweet is a quote Tweet.
            This attribute contains the Tweet object of the original Tweet that was quoted
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.RetweetedStatus">
            <summary>
            This attribute contains a representation of the original Tweet that was retweeted
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.QuoteCount">
            <summary>
            Indicates approximately how many times this Tweet has been quoted by Twitter users
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.ReplyCount">
            <summary>
            Number of times this Tweet has been replied to
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.RetweetCount">
            <summary>
            Number of times this Tweet has been retweeted
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.FavoriteCount">
            <summary>
            Indicates approximately how many times this Tweet has been liked by Twitter users
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Entities">
            <summary>
            Entities which have been parsed out of the text of the Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.ExtendedEntities">
            <summary>
            When between one and four native photos or one video or one animated GIF are in Tweet, contains an array 'media' metadata.
            This is also available in Quote Tweets
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Favorited">
            <summary>
            Indicates whether this Tweet has been liked by the authenticating user
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Retweeted">
            <summary>
            Indicates whether this Tweet has been Retweeted by the authenticating user
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.PossiblySensitive">
            <summary>
            This field only surfaces when a Tweet contains a link.
            The meaning of the field doesn’t pertain to the Tweet content itself, but instead it is an
            indicator that the URL contained in the Tweet may contain content or media identified as sensitive content
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.FilterLevel">
            <summary>
            Indicates the maximum value of the filter_level parameter which may be used and still stream this Tweet.
            So a value of medium will be streamed on none, low, and medium streams
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Culture">
            <summary>
            When present, indicates a BCP 47 language identifier corresponding to the machine-detected
            language of the Tweet text, or und if no language could be detected
            <para/>
            <remarks>Refers to "lang" property in json
            <para/>
            Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.MatchingRules">
            <summary>
            Present in filtered products such as Twitter Search and PowerTrack.
            Provides the id and tag associated with the rule that matched the Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.CurrentUserRetweet">
            <summary>
            Perspectival Only surfaces on methods supporting the include_my_retweet parameter, when set to true
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Scopes">
            <summary>
            A set of key-value pairs indicating the intended contextual delivery of the containing Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.WithheldCopyright">
            <summary>
            When present and set to “true”, it indicates that this piece of content has been withheld due to a DMCA complaint
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.WithheldInCountries">
            <summary>
            When present, indicates a list of uppercase two-letter country codes this content is withheld from.
            Twitter supports the following non-country values for this field:
            “XX” - Content is withheld in all countries “XY” - Content is withheld due to a DMCA request
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.WithheldScope">
            <summary>
            When present, indicates whether the content being withheld is the “status” or a “user”
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Geo">
            <summary>
            This deprecated attribute has its coordinates formatted as [lat, long], while all other Tweet geo is formatted as [long, lat].
            <para/>
            <remarks>Nullable</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.FullText">
            <summary>
            Full tweet's text
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.DisplayTextRange">
            <summary>
            Display text range
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.Contributors">
            <summary>
            Contributors
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.PossiblySensitiveAppealable">
            <summary>
            Is this tweet possibly sensitive?
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.Tweet.ProcessedText">
            <summary>
            Processed text
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TweetMedia">
            <summary>
            Usual tweet's media
            <para/>
            <remarks>API version: 1.1;
            <para/>
            Doc src: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.DisplayUrl">
            <summary>
            URL of the media to display to clients
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.ExpandedUrl">
            <summary>
            An expanded version of display_url. Links to the media display page
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.Id">
            <summary>
            ID of the media expressed as a 64-bit integer
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.IdString">
            <summary>
            ID of the media expressed as a string
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.Indices">
            <summary>
            An array of integers indicating the offsets within the Tweet text where the URL begins and ends
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.MediaUrl">
            <summary>
            An http:// URL pointing directly to the uploaded media file
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.MediaUrlHttps">
            <summary>
            An https:// URL pointing directly to the uploaded media file, for embedding on https pages
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.Sizes">
            <summary>
            An object showing available sizes for the media file
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.SourceStatusId">
            <summary>
            Nullable. For Tweets containing media that was originally associated with a different tweet, this ID points to the original Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.SourceStatusIdString">
            <summary>
            Nullable. For Tweets containing media that was originally associated with a different tweet,
            this string-based ID points to the original Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.Type">
            <summary>
            Type of uploaded media. Possible types include photo, video, and animated_gif
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.Url">
            <summary>
            Wrapped URL for the media link. This corresponds with the URL embedded directly
            into the raw Tweet text, and the values for the indices parameter
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.VideoInfo">
            <summary>
            Video's info
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMedia.AdditionalMediaInfo">
            <summary>
            Additional media info
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TweetMediaSize">
            <summary>
            Tweet media's size
            <para/>
            <remarks>API version: 1.1;
            <para/>
            Doc src: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMediaSize.Width">
            <summary>
            Width in pixels of this size
            <para/>
            <remarks>Refers to "w" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMediaSize.Height">
            <summary>
            Height in pixels of this size
            <para/>
            <remarks>Refers to "h" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMediaSize.Resize">
            <summary>
            Resizing method used to obtain this size. A value of fit means that the media was
            resized to fit one dimension, keeping its native aspect ratio. A value of crop means
            that the media was cropped in order to fit a specific resolution
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TweetMediaSizes">
            <summary>
            Tweet media's sizes
            <para/>
            <remarks>API version: 1.1;
            <para/>
            Doc src: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMediaSizes.Thumbnail">
            <summary>
            Information for a thumbnail-sized version of the media
            <para/>
            <remarks>Refers to "thumb" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMediaSizes.Large">
            <summary>
            Information for a large-sized version of the media
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMediaSizes.Medium">
            <summary>
            Information for a medium-sized version of the media
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TweetMediaSizes.Small">
            <summary>
            Information for a small-sized version of the media
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterAdditionalMediaInfo">
            <summary>
            Additional tweet media info
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterAdditionalMediaInfo.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterAdditionalMediaInfo.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterAdditionalMediaInfo.IsEmbeddable">
            <summary>
            Is embeddable?
            <para/>
            <remarks>Refers to "embeddable" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterAdditionalMediaInfo.IsMonetizable">
            <summary>
            Is monetizable?
            <para/>
            <remarks>Refers to "monetizable" property in json</remarks>
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterCoordinates`1">
            <summary>
            Twitter coordinates
            <para/>
            <remarks>API version: 1.1;
            <para/>
            Doc source: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterCoordinates`1.Coordinates">
            <summary>
            Collection of coordinates
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterCoordinates`1.Type">
            <summary>
            The type of data encoded in the coordinates property
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterEntities">
             <summary>
            Twitter entities
             <para/>
             <remarks>API version: 1.1;
             <para/>
             Doc src: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities
             </remarks>
             </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntities.Hashtags">
            <summary>
            Represents hashtags which have been parsed out of the Tweet text
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntities.Media">
            <summary>
            Represents media elements uploaded with the Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntities.Urls">
            <summary>
            Represents URLs included in the text of a Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntities.UserMentions">
            <summary>
            Represents other Twitter users mentioned in the text of the Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntities.Symbols">
            <summary>
            Represents symbols, i.e. $cashtags, included in the text of the Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntities.Polls">
            <summary>
            Represents Twitter Polls included in the Tweet
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterEntityExpandedUrl">
            <summary>
            Twitter expanded URL
            <para/>
            <remarks>API version: 1.1;
            <para/>
            Doc src: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntityExpandedUrl.Url">
            <summary>
            The fully unwound version of the link included in the Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntityExpandedUrl.Status">
            <summary>
            Final HTTP status of the unwinding process, a '200' indicating success
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntityExpandedUrl.Title">
            <summary>
            HTML title for the link
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntityExpandedUrl.Description">
            <summary>
            HTML description for the link
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterEntityUrl">
            <summary>
            Twitter entity URL
            <para/>
            <remarks>API version: 1.1;
            <para/>
            Doc src: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntityUrl.DisplayUrl">
            <summary>
            URL pasted/typed into Tweet
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntityUrl.ExpandedUrl">
            <summary>
            Expanded version of display_url
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntityUrl.Indices">
            <summary>
            An array of integers representing offsets within the Tweet text where the URL begins and ends
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntityUrl.Url">
            <summary>
            Wrapped URL, corresponding to the value embedded directly into the raw Tweet text, and the values for the indices parameter
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterEntityUrl.Unwound">
            <summary>
            Used with Expanded and/or Enhanced URL enrichments
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterGeo">
            <summary>
            Twitter geo info
            <para/>
            <remarks>API version: 2.0</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterGeo.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterGeo.BoundingBox">
            <summary>
            Coordinate borders
            <para/>
            <remarks>Refers to "id_str" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterGeo.Properties">
            <summary>
            Properties
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterHashtag">
            <summary>
            Twtitter hashtag
            <para/>
            <remarks>API version: 1.1;
            <para/>
            Doc src: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterHashtag.Indices">
            <summary>
            An array of integers indicating the offsets within the Tweet text where the hashtag begins and ends
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterHashtag.Text">
            <summary>
            Name of the hashtag, minus the leading ‘#’ character
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterPlace">
            <summary>
            Twitter place
            <para/>
            <remarks>API version: 1.1, 2.0;
            <para/>
            Docs sources:
            <para/>
            1.1: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/geo
            <para/>
            2.0: https://developer.twitter.com/en/docs/twitter-api/data-dictionary/object-model/place
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterPlace.Id">
            <summary>
            ID representing this place
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterPlace.Url">
            <summary>
            URL representing the location of additional place metadata for this place
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterPlace.PlaceType">
            <summary>
            The type of location represented by this place
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterPlace.Name">
            <summary>
            Short human-readable representation of the place’s name
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterPlace.FullName">
            <summary>
            Full human-readable representation of the place’s name
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterPlace.CountryCode">
            <summary>
            Shortened country code representing the country containing this place
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterPlace.Country">
            <summary>
            Name of the country containing this place
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterPlace.BoundingBox">
            <summary>
            A bounding box of coordinates which encloses this place
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterPlace.Attributes">
            <summary>
            When using PowerTrack, 30-Day and Full-Archive Search APIs, and Volume Streams this hash is null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterPlace.ContainedWithin">
            <summary>
            Returns the identifiers of known places that contain the referenced place
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterPlace.Geo">
            <summary>
            Contains place details in GeoJSON format
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterUser">
            <summary>
            Twitter user
            <para/>
            <remarks>API version: 1.1;
            <para/>
            Doc source: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/user
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Id">
            <summary>
            The integer representation of the unique identifier for this User
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.IdString">
            <summary>
            The string representation of the unique identifier for this User
            <para/>
            <remarks>Refers to "id_str" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Name">
            <summary>
            The name of the user, as they’ve defined it. Not necessarily a person’s name
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ScreenName">
            <summary>
            The screen name, handle, or alias that this user identifies themselves with
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Location">
            <summary>
            Nullable . The user-defined location for this account’s profile. Not necessarily a location, nor machine-parseable
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Derived">
            <summary>
            Enterprise APIs only Collection of Enrichment metadata derived for user.
            Provides the Profile Geo Enrichment metadata
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Url">
            <summary>
            Nullable. A URL provided by the user in association with their profile
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Entities">
            <summary>
            Entities
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Description">
            <summary>
            Nullable. The user-defined UTF-8 string describing their account
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Protected">
            <summary>
            When true, indicates that this user has chosen to protect their Tweets
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Verified">
            <summary>
            When true, indicates that the user has a verified account
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.FollowersCount">
            <summary>
            The number of followers this account currently has
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.FriendsCount">
            <summary>
            The number of users this account is following (AKA their “followings”)
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ListedCount">
            <summary>
            The number of public lists that this user is a member of
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.FavoritesCount">
            <summary>
            The number of Tweets this user has liked in the account’s lifetime
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.StatusesCount">
            <summary>
            The number of Tweets (including retweets) issued by the user
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.CreatedAt">
            <summary>
            The UTC datetime that the user account was created on Twitter
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileBannerUrl">
            <summary>
            The HTTPS-based URL pointing to the standard web representation of the user’s uploaded profile banner
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileImageUrlHttps">
            <summary>
            A HTTPS-based URL pointing to the user’s profile image
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.DefaultProfile">
            <summary>
            When true, indicates that the user has not altered the theme or background of their user profile
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.DefaultProfileImage">
            <summary>
            When true, indicates that the user has not uploaded their own profile image and a default image is used instead
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.WithheldInCountries">
            <summary>
            Withheld in countries
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.WithheldScope">
            <summary>
            Withheld scope
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.UtcOffset">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.TimeZone">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Language">
            <summary>
            Always null
            <para/>
            <remarks>Refers to "lang" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.GeoEnabled">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Following">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.FollowRequestSent">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.HasExtendedProfile">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.Notifications">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileLocation">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ContributorsEnabled">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileImageUrl">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileBackgroundColor">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileBackgroundImageUrl">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileBackgroundImageUrlHttps">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileBackgroundTile">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileLinkColor">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileSidebarBorderColor">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileSidebarFillColor">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileTextColor">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.ProfileUseBackgroundImage">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.IsTranslator">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.IsTranslationEnabled">
            <summary>
            Always null
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUser.TranslatorType">
            <summary>
            Always null
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterUserEntities">
            <summary>
            Twitter user entities
            <para/>
            <remarks>API version: 1.1</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUserEntities.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUserEntities.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterUserMentions">
            <summary>
            Twitter user mentions
            <para/>
            <remarks>API version: 1.1;
            <para/>
            Doc src: https://developer.twitter.com/en/docs/twitter-api/enterprise/data-dictionary/native-enriched-objects/entities
            </remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUserMentions.Id">
            <summary>
            ID of the mentioned user, as an integer
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUserMentions.IdString">
            <summary>
            ID of the mentioned user, as a string
            <para/>
            <remarks>Refers to "id_str" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUserMentions.Indices">
            <summary>
            An array of integers representing the offsets within the Tweet text where the user reference begins and ends
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUserMentions.Name">
            <summary>
            Display name of the referenced user
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterUserMentions.ScreenName">
            <summary>
            Screen name of the referenced user
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterVideoInfo">
            <summary>
            Twitter video info
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterVideoInfo.AspectRatio">
            <summary>
            Aspect ratio
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterVideoInfo.DurationMilliseconds">
            <summary>
            Duration in milliseconds
            <para/>
            <remarks>Refers to "duration_millis" property in json</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterVideoInfo.Variants">
            <summary>
            Variants
            </summary>
        </member>
        <member name="T:Osnova.Net.Twitter.TwitterVideoInfoVariant">
            <summary>
            Twitter video info variant
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterVideoInfoVariant.Bitrate">
            <summary>
            Bitrate
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterVideoInfoVariant.ContentType">
            <summary>
            Content type
            </summary>
        </member>
        <member name="P:Osnova.Net.Twitter.TwitterVideoInfoVariant.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="T:Osnova.Net.Users.ISubsite">
            <summary>
            Also known as "Subsite" and, in most cases, "User"
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.Type">
            <summary>
            Profile type
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.Description">
            <summary>
            Profile description
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.ProfileCover">
            <summary>
            Profile cover
            <para/>
            <remarks>Docs says it's <see cref="T:Osnova.Net.Cover"/>,
            but actual query returns <see cref="T:Osnova.Net.Blocks.ImageBlock"/></remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.IsSubscribed">
            <summary>
            Is current logged user subscribed to this profile?
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.IsVerified">
            <summary>
            Is verified?
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.IsUnsubscribable">
            <summary>
            Is profile insubscribable?
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.SubscribersCount">
            <summary>
            Subscribers count
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.CommentsCount">
            <summary>
            Comments count
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.EntriesCount">
            <summary>
            Entries count
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.VacanciesCount">
            <summary>
            Vacancies count
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.DateCreatedRfc">
            <summary>
            Date, when this profile was created in RFC2822 format
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.AdvancedAccess">
            <summary>
            Advanced controls
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.Counters">
            <summary>
            Additional profile counters
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.UserHash">
            <summary>
            Profile's hash ID
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.ISubsite.Contacts">
            <summary>
            Profile contacts
            </summary>
        </member>
        <member name="T:Osnova.Net.Users.IUser">
            <summary>
            Also known as "Author" and "User"
            <para/>
            <remarks>Refers to specification of Author on official API docs</remarks>
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.IUser.Id">
            <summary>
            Profile's ID
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.IUser.DateCreated">
            <summary>
            Date, when this profile was created
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.IUser.FirstName">
            <summary>
            First name
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.IUser.LastName">
            <summary>
            Last name
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.IUser.Name">
            <summary>
            Full name
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.IUser.Gender">
            <summary>
            Gender
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.IUser.Url">
            <summary>
            Profile's page URL
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.IUser.AvatarUrl">
            <summary>
            Profile avatar URL
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.IUser.Karma">
            <summary>
            Value of karma
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.IUser.SocialAccounts">
            <summary>
            Collection of social accounts, if there are any
            </summary>
        </member>
        <member name="T:Osnova.Net.Users.User">
            <summary>
            Also known as Author, Subsite
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.Id">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.DateCreated">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.FirstName">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.LastName">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.Name">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.Gender">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.Url">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.AvatarUrl">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.Karma">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.SocialAccounts">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.Type">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.Description">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.ProfileCover">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.IsSubscribed">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.IsVerified">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.IsUnsubscribable">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.SubscribersCount">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.CommentsCount">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.EntriesCount">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.VacanciesCount">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.DateCreatedRfc">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.PushTopic">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.AdvancedAccess">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.Counters">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.UserHash">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.Contacts">
            <inheritdoc/>
        </member>
        <member name="P:Osnova.Net.Users.User.Avatar">
            <summary>
            Profile's avatar
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.IsOnline">
            <summary>
            Is online?
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.IsVerified2">
            <summary>
            isVerified analogue of is_verified
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.OnlineStatusText">
            <summary>
            Online status text
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.IsAvailableForMessenger">
            <summary>
            Is available for messenger?
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.IsMuted">
            <summary>
            Is muted?
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.IsMuted2">
            <summary>
            isMuted analogue of is_muted
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.IsSubscribedToNewPosts">
            <summary>
            Is subscribed to new posts?
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.SubscribersAvatars">
            <summary>
            Collection of subscribers avatars
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.IsPlus">
            <summary>
            Is plus?
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.IsEnableWriting">
            <summary>
            Is enable writing?
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.Rules">
            <summary>
            Subsite rules
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.EventsCount">
            <summary>
            Count of subsite events
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.CommentEditor">
            <summary>
            Comment editor's settigs
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.UserHashes">
            <summary>
            Thanks ochoba: string and int in one list...
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.CanChangeAvatar">
            <summary>
            Can change avatar?
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.CanChangeCover">
            <summary>
            Can change cover?
            </summary>
        </member>
        <member name="P:Osnova.Net.Users.User.IsBanned">
            <summary>
            Is banned?
            </summary>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserMeAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Warning: requires client to be authenticated
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserMeUpdatesAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Boolean,System.Int64,System.Double)">
            <summary>
            Warning: requires authentication!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserMeUpdatesCountAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Warning: requires authentication!
            </summary>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserFavoritesEntriesAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Requires authentication
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="userId"></param>
            <param name="count"></param>
            <param name="offset"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserFavoritesCommentsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Requires authentication
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="userId"></param>
            <param name="count"></param>
            <param name="offset"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserFavoritesVacanciesAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Requires authentication
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="userId"></param>
            <param name="count"></param>
            <param name="offset"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserMeFavoritesEntriesAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Double)">
            <summary>
            Requires authentication
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="count"></param>
            <param name="offset"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserMeFavoritesCommentsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Double)">
            <summary>
            Requires authentication
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="count"></param>
            <param name="offset"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserMeFavoritesVacanciesAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Int32,System.Int32,System.Double)">
            <summary>
            Requires authentication
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="count"></param>
            <param name="offset"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserMeSubscriptionsRecommendedAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Requires authentication
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserMeSubscriptionsSubscribedAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Requires authentication
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetUserMeTuneCatalogAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Requires authentication
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Osnova.Net.Users.User.GetIgnoredKeywordsAsync(System.Net.Http.HttpClient,Osnova.Net.Enums.WebsiteKind,System.Double)">
            <summary>
            Requires authentication
            </summary>
            <param name="client"></param>
            <param name="websiteKind"></param>
            <param name="apiVersion"></param>
            <returns></returns>
        </member>
        <member name="T:Osnova.Net.Users.UserCounters">
            <summary>
            Refers to Counters specification
            </summary>
        </member>
        <member name="T:Osnova.Net.Vacancies.IVacancy">
            <summary>
            Refers to Vacancy spec
            </summary>
        </member>
        <member name="P:Osnova.Net.Vacancies.IVacancy.Id">
            <summary>
            Vacancy ID
            </summary>
        </member>
        <member name="P:Osnova.Net.Vacancies.IVacancy.Title">
            <summary>
            Vacancy title
            </summary>
        </member>
        <member name="P:Osnova.Net.Vacancies.IVacancy.SalaryMax">
            <summary>
            Max salary value
            </summary>
        </member>
        <member name="P:Osnova.Net.Vacancies.IVacancy.SalaryMin">
            <summary>
            Min salary value
            </summary>
        </member>
        <member name="P:Osnova.Net.Vacancies.IVacancy.SalaryText">
            <summary>
            Info about salary
            </summary>
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.Id">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.Title">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.SalaryMax">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.SalaryMin">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.SalaryText">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.Area">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.AreaText">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.Schedule">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.ScheduleText">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.EntryId">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.CityId">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.CityName">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.FavoritesCount">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.IsFavorited">
            <inheritdoc />
        </member>
        <member name="P:Osnova.Net.Vacancies.Vacancy.Company">
            <inheritdoc />
        </member>
        <member name="T:Osnova.Net.WebHooks.WebhookWatcher">
            <summary>
            Refers to Watcher spec
            </summary>
        </member>
        <member name="P:Osnova.Net.WebHooks.WebhookWatcher.Id">
            <summary>
            Event ID
            </summary>
        </member>
        <member name="P:Osnova.Net.WebHooks.WebhookWatcher.EventName">
            <summary>
            Event name
            </summary>
        </member>
        <member name="T:Osnova.Net.WebSockets.WebSocket">
            <summary>
            Refers to Websocket spec
            </summary>
        </member>
        <member name="T:Osnova.Net.WebSockets.WebSocketClient">
            <summary>
            Modified code from here: https://stackoverflow.com/questions/30523478/connecting-to-websocket-using-c-sharp-i-can-connect-using-javascript-but-c-sha/58285551
            Test websockets here: https://www.piesocket.com/websocket-tester
            </summary>
        </member>
        <member name="M:Osnova.Net.WebSockets.WebSocketClient.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Osnova.Net.WebSockets.WebSocketClient.Dispose(System.Boolean)">
            <inheritdoc cref="M:Osnova.Net.WebSockets.WebSocketClient.Dispose"/>
            <param name="disposing">Dispose static fields?</param>
        </member>
        <member name="M:Osnova.Net.WebSockets.WebSocketClient.DisposeAsync">
            <inheritdoc />
        </member>
    </members>
</doc>
